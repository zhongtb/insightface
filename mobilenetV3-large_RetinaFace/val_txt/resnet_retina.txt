nohup: ignoring input
INFO:root:Called with argument: Namespace(bbox_vote=True, dataset='retinaface', dataset_path='./data/retinaface', epoch=999, gpu=4, image_set='val', mode=1, network='net5', nocrop=False, output='./test_out_dic/resnet_retina_epoch_05', part=0, parts=1, prefix='model/resnet_retina/resnet_retina', pyramid=True, root_path='./data', thresh=0.5)
[12:22:21] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:22:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:22:56] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:23:14] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:23:18] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:23:36] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:23:39] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:23:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:23:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:104: If you see this message in the middle of training, you are probably using bucketing. Consider setting env variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable cudnn tuning.
[12:24:00] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:24:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:24:18] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:25:07] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:25:09] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:25:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:25:40] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:26:01] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:26:32] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:26:36] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:26:49] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:27:13] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:27:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:27:36] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:27:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:28:07] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:28:13] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:28:17] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:28:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:28:53] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:29:15] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:29:17] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:29:34] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:30:08] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:30:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:31:17] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:31:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:32:07] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:32:10] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:32:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:32:29] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:33:36] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:33:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:33:54] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:33:56] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:33:59] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:34:03] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:34:08] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:34:11] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:34:31] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:34:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:34:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:35:01] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:35:09] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:35:28] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:35:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:35:34] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:35:56] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:36:08] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:36:11] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:36:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:36:59] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:37:32] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:37:43] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:38:05] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:38:25] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:38:46] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:39:06] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:39:29] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:39:32] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:39:35] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:39:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:40:02] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:40:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:40:48] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:41:29] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:41:47] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:41:49] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:42:08] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:42:42] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:43:08] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:43:15] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:43:21] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:43:31] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:43:34] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:44:20] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:44:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:44:54] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:44:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:45:13] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:45:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:45:36] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:45:47] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:45:55] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:46:03] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:46:05] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:46:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:46:42] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:46:44] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:47:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:47:40] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:47:43] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:48:15] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:48:34] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:48:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:48:59] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:49:02] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:49:04] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:49:29] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:50:27] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:50:47] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:50:57] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:51:06] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:51:08] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:51:22] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:51:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:51:27] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:51:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:51:33] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:51:48] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:51:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:52:45] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:53:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:53:28] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:53:41] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:53:53] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:53:57] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:54:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:54:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[0] recall 1.0 (5, 5) all: 1.0
[1] recall 0.96 (25, 26) all: 0.9666666666666667
[2] recall 1.0 (6, 6) all: 0.9722222222222222
[3] recall 1.0 (4, 4) all: 0.975
[4] recall 1.0 (3, 3) all: 0.9767441860465116
[5] recall 1.0 (6, 7) all: 0.9795918367346939
[6] recall 1.0 (2, 2) all: 0.9803921568627451
[7] recall 1.0 (3, 3) all: 0.9814814814814815
[8] recall 1.0 (5, 9) all: 0.9830508474576272
[9] recall 0.7647058823529411 (17, 17) all: 0.9342105263157895
[10] recall 0.6216216216216216 (37, 31) all: 0.831858407079646
[11] recall 1.0 (5, 6) all: 0.8389830508474576
[12] recall 1.0 (5, 5) all: 0.8455284552845529
[13] recall 1.0 (3, 4) all: 0.8492063492063492
[14] recall 1.0 (4, 5) all: 0.8538461538461538
[15] recall 1.0 (5, 6) all: 0.8592592592592593
[16] recall 1.0 (3, 4) all: 0.8623188405797102
[17] recall 0.8571428571428571 (7, 7) all: 0.8620689655172413
[18] recall 1.0 (14, 17) all: 0.8742138364779874
[20] recall 1.0 (6, 7) all: 0.8787878787878788
[21] recall 1.0 (8, 8) all: 0.884393063583815
[22] recall 1.0 (9, 11) all: 0.8901098901098901
[23] recall 1.0 (1, 1) all: 0.8907103825136612
[24] recall 0.8823529411764706 (17, 16) all: 0.89
[25] recall 1.0 (2, 4) all: 0.8910891089108911
[26] recall 0.8210526315789474 (95, 93) all: 0.8686868686868687
[27] recall 0.8888888888888888 (9, 10) all: 0.869281045751634
[28] recall 0.5833333333333334 (12, 8) all: 0.8584905660377359
[29] recall 1.0 (5, 5) all: 0.8606811145510835
[30] recall 0.9 (10, 9) all: 0.8618618618618619
[31] recall 1.0 (2, 4) all: 0.8626865671641791
[32] recall 1.0 (2, 3) all: 0.8635014836795252
[33] recall 1.0 (1, 3) all: 0.863905325443787
[34] recall 1.0 (2, 2) all: 0.8647058823529412
[35] recall 1.0 (1, 3) all: 0.8651026392961877
[36] recall 1.0 (5, 5) all: 0.8670520231213873
[37] recall 1.0 (4, 4) all: 0.8685714285714285
[38] recall 1.0 (6, 7) all: 0.8707865168539326
[39] recall 1.0 (3, 3) all: 0.871866295264624
[40] recall 1.0 (1, 1) all: 0.8722222222222222
[41] recall 1.0 (2, 3) all: 0.8729281767955801
[42] recall 1.0 (11, 12) all: 0.8766756032171582
[43] recall 1.0 (1, 1) all: 0.8770053475935828
[44] recall 1.0 (3, 4) all: 0.8779840848806366
[45] recall 1.0 (1, 1) all: 0.8783068783068783
[46] recall 1.0 (1, 1) all: 0.8786279683377308
[47] recall 1.0 (4, 4) all: 0.8798955613577023
[48] recall 1.0 (4, 5) all: 0.8811369509043928
[49] recall 1.0 (2, 2) all: 0.8817480719794345
[50] recall 1.0 (2, 3) all: 0.8823529411764706
[51] recall 0.7647058823529411 (17, 18) all: 0.8774509803921569
[52] recall 1.0 (10, 11) all: 0.8803827751196173
[53] recall 1.0 (4, 6) all: 0.8815165876777251
[54] recall 0.9027777777777778 (72, 79) all: 0.8846153846153846
[55] recall 1.0 (1, 1) all: 0.8848484848484849
[56] recall 1.0 (4, 5) all: 0.8857715430861723
[57] recall 1.0 (9, 10) all: 0.8877952755905512
[58] recall 1.0 (14, 15) all: 0.8908045977011494
[59] recall 1.0 (1, 1) all: 0.8910133843212237
[60] recall 1.0 (9, 9) all: 0.8928571428571429
[61] recall 1.0 (4, 4) all: 0.8936567164179104
[62] recall 1.0 (1, 2) all: 0.8938547486033519
[63] recall 0.8833333333333333 (60, 64) all: 0.8927973199329984
[64] recall 0.9 (10, 11) all: 0.8929159802306426
[65] recall 1.0 (1, 5) all: 0.8930921052631579
[66] recall 1.0 (2, 2) all: 0.8934426229508197
[67] recall 1.0 (1, 1) all: 0.8936170212765957
[68] recall 0.8888888888888888 (9, 8) all: 0.8935483870967742
[69] recall 1.0 (1, 3) all: 0.893719806763285
[70] recall 0.8823529411764706 (17, 15) all: 0.8934169278996865
[71] recall 1.0 (18, 19) all: 0.8963414634146342
[72] recall 1.0 (6, 6) all: 0.8972809667673716
[73] recall 1.0 (9, 9) all: 0.8986587183308494
[74] recall 1.0 (4, 4) all: 0.8992592592592593
[75] recall 1.0 (5, 16) all: 0.9
[76] recall 1.0 (5, 7) all: 0.9007299270072993
[77] recall 1.0 (8, 8) all: 0.9018759018759018
[78] recall 0.9166666666666666 (12, 14) all: 0.902127659574468
[79] recall 1.0 (7, 7) all: 0.9030898876404494
[80] recall 1.0 (11, 12) all: 0.9045643153526971
[81] recall 1.0 (4, 4) all: 0.9050894085281981
[82] recall 1.0 (2, 6) all: 0.9053497942386831
[83] recall 1.0 (3, 3) all: 0.9057377049180327
[84] recall 0.8 (5, 7) all: 0.9050203527815468
[85] recall 1.0 (14, 14) all: 0.9067909454061251
[86] recall 0.0 (3, 3) all: 0.903183023872679
[87] recall 0.8888888888888888 (9, 8) all: 0.9030144167758847
[88] recall 1.0 (9, 9) all: 0.9041450777202072
[89] recall 1.0 (4, 5) all: 0.904639175257732
[90] recall 1.0 (3, 3) all: 0.9050064184852374
[91] recall 1.0 (8, 8) all: 0.9059720457433291
[92] recall 1.0 (11, 11) all: 0.9072681704260651
[93] recall 1.0 (13, 13) all: 0.9087546239210851
[94] recall 1.0 (1, 4) all: 0.9088669950738916
[95] recall 1.0 (6, 6) all: 0.9095354523227384
[96] recall 1.0 (1, 2) all: 0.9096459096459096
[97] recall 1.0 (3, 3) all: 0.9099756690997567
[98] recall 1.0 (6, 7) all: 0.9106280193236715
[99] recall 1.0 (5, 6) all: 0.9111644657863145
[100] recall 1.0 (9, 10) all: 0.9121140142517815
[101] recall 1.0 (3, 4) all: 0.9124260355029585
[102] recall 1.0 (2, 6) all: 0.9126328217237308
[103] recall 1.0 (5, 5) all: 0.9131455399061033
[104] recall 1.0 (3, 5) all: 0.9134502923976608
[105] recall 1.0 (8, 8) all: 0.9142526071842411
[106] recall 1.0 (3, 6) all: 0.9145496535796767
[107] recall 1.0 (8, 9) all: 0.9153318077803204
[108] recall 0.7142857142857143 (7, 5) all: 0.9137343927355278
[109] recall 1.0 (5, 6) all: 0.9142212189616253
[110] recall 1.0 (3, 6) all: 0.9145106861642295
[111] recall 1.0 (1, 1) all: 0.9146067415730337
[112] recall 1.0 (5, 9) all: 0.9150837988826815
[113] recall 0.75 (8, 6) all: 0.9136212624584718
[114] recall 1.0 (5, 5) all: 0.9140969162995595
[115] recall 1.0 (4, 4) all: 0.9144736842105263
[116] recall 1.0 (5, 5) all: 0.9149400218102508
[117] recall 1.0 (5, 6) all: 0.9154013015184381
[118] recall 1.0 (16, 16) all: 0.9168443496801706
[119] recall 1.0 (5, 6) all: 0.9172852598091198
[120] recall 0.9285714285714286 (14, 14) all: 0.9174503657262278
[121] recall 1.0 (1, 3) all: 0.9175365344467641
[122] recall 1.0 (5, 6) all: 0.9179646936656283
[123] recall 1.0 (7, 7) all: 0.9185567010309278
[124] recall 0.9 (20, 21) all: 0.9181818181818182
[125] recall 1.0 (6, 6) all: 0.9186746987951807
[126] recall 1.0 (1, 1) all: 0.9187562688064193
[127] recall 1.0 (8, 8) all: 0.9194029850746268
[128] recall 1.0 (6, 6) all: 0.9198813056379822
[129] recall 1.0 (5, 5) all: 0.9202755905511811
[130] recall 1.0 (1, 2) all: 0.9203539823008849
[131] recall 1.0 (1, 2) all: 0.9204322200392927
[132] recall 1.0 (21, 21) all: 0.9220404234841193
[133] recall 1.0 (1, 1) all: 0.9221153846153847
[134] recall 1.0 (5, 5) all: 0.9224880382775119
[135] recall 1.0 (3, 4) all: 0.9227099236641222
[136] recall 0.375 (8, 4) all: 0.9185606060606061
[137] recall 1.0 (5, 5) all: 0.9189443920829407
[138] recall 0.9411764705882353 (17, 17) all: 0.9192949907235621
[139] recall 1.0 (4, 5) all: 0.9195933456561922
[140] recall 1.0 (3, 4) all: 0.919815668202765
[141] recall 1.0 (10, 10) all: 0.9205479452054794
[142] recall 1.0 (1, 2) all: 0.9206204379562044
[143] recall 0.8571428571428571 (7, 6) all: 0.9202175883952856
[144] recall 1.0 (1, 1) all: 0.9202898550724637
[145] recall 1.0 (1, 1) all: 0.9203619909502262
[146] recall 1.0 (4, 4) all: 0.9206492335437331
[147] recall 1.0 (2, 3) all: 0.9207920792079208
[148] recall 1.0 (3, 3) all: 0.9210053859964094
[149] recall 1.0 (1, 1) all: 0.9210762331838565
[150] recall 1.0 (1, 1) all: 0.921146953405018
[151] recall 1.0 (1, 1) all: 0.9212175470008953
[152] recall 1.0 (3, 3) all: 0.9214285714285714
[153] recall 1.0 (1, 1) all: 0.9214986619090099
[154] recall 1.0 (1, 1) all: 0.9215686274509803
[155] recall 1.0 (2, 3) all: 0.9217081850533808
[156] recall 1.0 (2, 2) all: 0.9218472468916519
[157] recall 1.0 (1, 2) all: 0.9219165927240461
[158] recall 1.0 (5, 6) all: 0.9222614840989399
[159] recall 1.0 (1, 2) all: 0.9223300970873787
[160] recall 1.0 (1, 1) all: 0.9223985890652557
[161] recall 1.0 (3, 4) all: 0.9226033421284081
[162] recall 1.0 (1, 2) all: 0.9226713532513181
[163] recall 1.0 (1, 1) all: 0.922739244951712
[164] recall 1.0 (2, 2) all: 0.922874671340929
[165] recall 0.9 (20, 18) all: 0.9224806201550387
[166] recall 1.0 (1, 1) all: 0.9225473321858864
[167] recall 1.0 (4, 4) all: 0.9228130360205832
[168] recall 1.0 (1, 1)[12:54:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:55:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:55:27] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:55:35] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:55:40] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:55:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:56:01] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:56:21] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:56:39] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:56:53] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:57:06] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:57:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:57:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:57:41] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:57:50] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:57:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:58:02] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:58:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:58:25] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:58:28] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:58:31] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:58:35] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:59:08] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:59:20] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:59:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:59:31] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:59:35] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:59:48] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[12:59:52] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:00:10] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:01:55] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:02:10] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:02:22] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:02:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:02:35] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:02:43] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
test with Namespace(bbox_vote=True, dataset='retinaface', dataset_path='./data/retinaface', epoch=999, gpu=4, image_set='val', mode=1, network='net5', nocrop=False, output='./test_out_dic/resnet_retina_epoch_05', part=0, parts=1, prefix='model/resnet_retina/resnet_retina', pyramid=True, root_path='./data', thresh=0.5)
[64, 32, 16, 8, 4] {'4': {'BASE_SIZE': 16, 'RATIOS': (1.0,), 'ALLOWED_BORDER': 9999, 'SCALES': (1.0, 1.2599210498948732, 1.5874010519681996)}, '8': {'BASE_SIZE': 16, 'RATIOS': (1.0,), 'ALLOWED_BORDER': 9999, 'SCALES': (2.0, 2.5198420997897464, 3.174802103936399)}, '16': {'BASE_SIZE': 16, 'RATIOS': (1.0,), 'ALLOWED_BORDER': 9999, 'SCALES': (4.0, 5.039684199579493, 6.349604207872798)}, '32': {'BASE_SIZE': 16, 'RATIOS': (1.0,), 'ALLOWED_BORDER': 9999, 'SCALES': (8.0, 10.079368399158986, 12.699208415745597)}, '64': {'BASE_SIZE': 16, 'RATIOS': (1.0,), 'ALLOWED_BORDER': 9999, 'SCALES': (16.0, 20.15873679831797, 25.398416831491193)}}
self.nms_threshold:  0.4
means [0. 0. 0.]
use_landmarks True
sym size: 15
args.dataset: retinaface
args.image_set: val
args.root_path: ./data
args.dataset_path: ./data/retinaface
origin image size 1415
imdb:  <rcnn.dataset.retinaface.retinaface object at 0x7f860f9a3e48>
retinaface_val gt roidb loaded from ./data/cache/retinaface_val_val_gt_roidb_pkl
roidb size 1415
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  26
box_num:  17
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  7
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  9
box_num:  7
boxes.shape[0]:  17
box_num:  3
boxes.shape[0]:  31
box_num:  2
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  7
box_num:  0
boxes.shape[0]:  17
box_num:  8
boxes.shape[0]:  0
box_num:  0
boxes.shape[0]:  7
box_num:  2
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  11
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  16
box_num:  10
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  93
box_num:  21
boxes.shape[0]:  10
box_num:  3
boxes.shape[0]:  8
box_num:  0
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  9
box_num:  5
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  7
box_num:  5
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  12
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  18
box_num:  0
boxes.shape[0]:  11
box_num:  1
boxes.shape[0]:  6
box_num:  4
boxes.shape[0]:  79
box_num:  11
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  10
box_num:  8
boxes.shape[0]:  15
box_num:  11
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  9
box_num:  5
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  64
box_num:  10
boxes.shape[0]:  11
box_num:  4
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  15
box_num:  10
boxes.shape[0]:  19
box_num:  1
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  9
box_num:  6
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  16
box_num:  3
boxes.shape[0]:  7
box_num:  2
boxes.shape[0]:  8
box_num:  1
boxes.shape[0]:  14
box_num:  2
boxes.shape[0]:  7
box_num:  5
boxes.shape[0]:  12
box_num:  9
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  7
box_num:  3
boxes.shape[0]:  14
box_num:  2
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  8
box_num:  5
boxes.shape[0]:  9
box_num:  9
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  11
box_num:  11
boxes.shape[0]:  13
box_num:  12
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  6
box_num:  4
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  7
box_num:  4
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  10
box_num:  9
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  9
box_num:  9
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  6
box_num:  4
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  9
box_num:  1
boxes.shape[0]:  6
box_num:  6
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  16
box_num:  13
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  14
box_num:  12
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  7
box_num:  1
boxes.shape[0]:  21
box_num:  5
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  21
box_num:  19
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  17
box_num:  7
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  10
box_num:  10
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  18
box_num:  6
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  10
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  17
box_num:  5
boxes.shape[0]:  17
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  11
box_num:  3
boxes.shape[0]:  7
box_num:  6
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  9
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]: [13:03:12] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:03:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:03:28] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:03:31] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:04:15] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:04:28] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:04:49] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:04:52] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:05:22] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:05:26] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:05:31] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:05:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:05:46] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:06:09] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:06:14] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:06:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:06:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:07:19] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:07:39] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:07:44] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:07:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:07:55] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:09:00] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:09:08] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:09:46] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:10:19] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:10:34] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:10:40] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:10:53] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:10:57] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:11:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:11:36] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:11:40] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:12:01] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:12:06] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:12:53] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:12:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:13:05] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:14:01] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:14:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:14:41] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:15:02] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:15:09] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:15:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:15:43] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:16:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:16:35] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:16:40] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:16:50] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:17:00] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:17:19] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:17:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:17:49] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
 all: 0.922879177377892
[169] recall 1.0 (2, 2) all: 0.9230111206159111
[170] recall 1.0 (2, 2) all: 0.9231426131511529
[171] recall 1.0 (3, 3) all: 0.9233390119250426
[172] recall 1.0 (1, 1) all: 0.9234042553191489
[173] recall 1.0 (1, 2) all: 0.923469387755102
[174] recall 1.0 (1, 1) all: 0.923534409515718
[175] recall 1.0 (1, 1) all: 0.9235993208828522
[176] recall 1.0 (2, 2) all: 0.923728813559322
[177] recall 1.0 (1, 2) all: 0.9237933954276037
[178] recall 1.0 (1, 1) all: 0.9238578680203046
[179] recall 0.75 (12, 10) all: 0.9221105527638191
[180] recall 1.0 (2, 2) all: 0.9222408026755853
[181] recall 1.0 (4, 5) all: 0.9225
[182] recall 1.0 (3, 3) all: 0.9226932668329177
[183] recall 1.0 (2, 2) all: 0.9228215767634855
[184] recall 1.0 (1, 2) all: 0.9228855721393034
[185] recall 1.0 (1, 1) all: 0.9229494614747308
[186] recall 1.0 (1, 1) all: 0.9230132450331126
[187] recall 1.0 (1, 1) all: 0.9230769230769231
[188] recall 1.0 (3, 3) all: 0.9232673267326733
[189] recall 1.0 (2, 2) all: 0.9233937397034596
[190] recall 1.0 (5, 5) all: 0.9237079573420837
[191] recall 1.0 (2, 4) all: 0.9238329238329238
[192] recall 1.0 (1, 1) all: 0.9238952536824877
[193] recall 0.8333333333333334 (6, 6) all: 0.9234527687296417
[194] recall 1.0 (1, 1) all: 0.9235150528885273
[195] recall 1.0 (3, 3) all: 0.9237012987012987
[196] recall 1.0 (4, 4) all: 0.9239482200647249
[197] recall 1.0 (1, 2) all: 0.9240097008892482
[198] recall 1.0 (2, 2) all: 0.9241323648103309
[199] recall 1.0 (13, 17) all: 0.9249201277955271
[200] recall 0.9375 (16, 17) all: 0.9250788643533123
[201] recall 1.0 (1, 1) all: 0.9251379038613081
[202] recall 1.0 (1, 1) all: 0.9251968503937008
[203] recall 1.0 (2, 2) all: 0.925314465408805
[204] recall 1.0 (1, 1) all: 0.9253731343283582
[205] recall 1.0 (5, 6) all: 0.9256651017214398
[206] recall 1.0 (1, 1) all: 0.9257232212666145
[207] recall 1.0 (10, 11) all: 0.9262994569433669
[208] recall 1.0 (6, 7) all: 0.9266409266409267
[209] recall 1.0 (4, 5) all: 0.9268668206312548
[210] recall 1.0 (1, 2) all: 0.926923076923077
[211] recall 1.0 (4, 5) all: 0.9271472392638037
[212] recall 1.0 (1, 1) all: 0.9272030651340997
[213] recall 0.75 (8, 8) all: 0.9261233815689262
[214] recall 1.0 (1, 1) all: 0.926179604261796
[215] recall 1.0 (3, 3) all: 0.9263477600607442
[216] recall 1.0 (1, 2) all: 0.9264036418816388
[217] recall 1.0 (8, 9) all: 0.9268476621417798
[218] recall 1.0 (1, 1) all: 0.9269027882441597
[219] recall 1.0 (1, 1) all: 0.9269578313253012
[220] recall 1.0 (1, 1) all: 0.927012791572611
[221] recall 0.9 (10, 9) all: 0.9268110530246453
[222] recall 1.0 (4, 4) all: 0.9270290394638868
[223] recall 1.0 (2, 2) all: 0.9271375464684015
[224] recall 1.0 (1, 1) all: 0.9271916790490342
[225] recall 1.0 (1, 3) all: 0.9272457312546399
[226] recall 1.0 (1, 5) all: 0.9272997032640949
[227] recall 1.0 (6, 6) all: 0.9276218611521418
[228] recall 1.0 (2, 2) all: 0.9277286135693216
[229] recall 1.0 (3, 3) all: 0.927888153053716
[230] recall 1.0 (3, 4) all: 0.9280469897209985
[231] recall 0.9090909090909091 (11, 11) all: 0.9278951201747997
[232] recall 1.0 (2, 5) all: 0.928
[233] recall 1.0 (2, 2) all: 0.9281045751633987
[234] recall 1.0 (2, 2) all: 0.9282088469905729
[235] recall 1.0 (1, 1) all: 0.9282608695652174
[236] recall 1.0 (1, 1) all: 0.9283128167994207
[237] recall 1.0 (2, 2) all: 0.928416485900217
[238] recall 1.0 (5, 5) all: 0.9286743515850144
[239] recall 1.0 (5, 8) all: 0.9289303661162958
[240] recall 1.0 (4, 8) all: 0.9291338582677166
[241] recall 1.0 (9, 9) all: 0.9295874822190612
[242] recall 1.0 (4, 4) all: 0.9297872340425531
[243] recall 1.0 (1, 3) all: 0.9298369950389794
[244] recall 1.0 (7, 7) all: 0.9301833568406206
[245] recall 1.0 (2, 3) all: 0.930281690140845
[246] recall 1.0 (5, 5) all: 0.9305263157894736
[247] recall 1.0 (2, 2) all: 0.9306236860546602
[248] recall 1.0 (2, 2) all: 0.9307207837648706
[249] recall 0.875 (8, 9) all: 0.930410577592206
[250] recall 0.9666666666666667 (30, 36) all: 0.9311520109066121
[251] recall 1.0 (1, 2) all: 0.9311989100817438
[252] recall 0.9230769230769231 (13, 13) all: 0.9311276164753545
[253] recall 1.0 (3, 6) all: 0.931266846361186
[254] recall 1.0 (1, 1) all: 0.9313131313131313
[255] recall 1.0 (8, 8) all: 0.9316811788345613
[256] recall 1.0 (5, 5) all: 0.931909212283044
[257] recall 1.0 (1, 10) all: 0.9319546364242829
[258] recall 1.0 (5, 6) all: 0.9321808510638298
[259] recall 1.0 (1, 2) all: 0.9322259136212625
[260] recall 1.0 (1, 1) all: 0.9322709163346613
[261] recall 1.0 (1, 1) all: 0.9323158593231586
[262] recall 1.0 (1, 1) all: 0.9323607427055703
[263] recall 0.6 (5, 6) all: 0.9312623925974884
[264] recall 1.0 (1, 1) all: 0.9313077939233818
[265] recall 1.0 (1, 1) all: 0.9313531353135314
[266] recall 1.0 (18, 20) all: 0.9321591650358774
[267] recall 0.7272727272727273 (44, 41) all: 0.9264426125554851
[268] recall 1.0 (1, 1) all: 0.926489226869455
[269] recall 1.0 (1, 1) all: 0.9265357821405953
[270] recall 1.0 (1, 1) all: 0.9265822784810127
[271] recall 1.0 (2, 2) all: 0.9266750948166877
[272] recall 1.0 (2, 3) all: 0.9267676767676768
[273] recall 1.0 (10, 15) all: 0.9272271016311167
[274] recall 1.0 (2, 2) all: 0.9273182957393483
[275] recall 1.0 (2, 2) all: 0.9274092615769712
[276] recall 1.0 (2, 3) all: 0.9275
[277] recall 1.0 (4, 4) all: 0.9276807980049875
[278] recall 1.0 (2, 2) all: 0.9277708592777086
[279] recall 1.0 (2, 3) all: 0.927860696517413
[280] recall 1.0 (2, 2) all: 0.9279503105590062
[281] recall 1.0 (2, 3) all: 0.9280397022332506
[282] recall 1.0 (2, 2) all: 0.9281288723667905
[283] recall 1.0 (2, 3) all: 0.9282178217821783
[284] recall 1.0 (2, 2) all: 0.9283065512978986
[285] recall 1.0 (2, 3) all: 0.928395061728395
[286] recall 1.0 (1, 1) all: 0.9284392350400987
[287] recall 1.0 (2, 2) all: 0.9285274183610598
[288] recall 1.0 (3, 3) all: 0.9286592865928659
[289] recall 0.7916666666666666 (48, 44) all: 0.9247311827956989
[290] recall 1.0 (1, 1) all: 0.9247761194029851
[291] recall 1.0 (8, 8) all: 0.9251336898395722
[292] recall 1.0 (4, 7) all: 0.9253112033195021
[293] recall 1.0 (7, 7) all: 0.9256198347107438
[294] recall 1.0 (1, 10) all: 0.9256637168141593
[295] recall 0.8461538461538461 (13, 20) all: 0.9250585480093677
[296] recall 0.948051948051948 (77, 92) all: 0.9260504201680673
[297] recall 0.9333333333333333 (15, 16) all: 0.9261111111111111
[298] recall 1.0 (1, 1) all: 0.926152137701277
[299] recall 0.8333333333333334 (6, 7) all: 0.9258439402324294
[300] recall 1.0 (22, 23) all: 0.9267359212684527
[301] recall 1.0 (9, 11) all: 0.9270946681175191
[302] recall 0.8235294117647058 (17, 16) all: 0.9261455525606469
[303] recall 1.0 (3, 4) all: 0.926264800861141
[304] recall 1.0 (9, 11) all: 0.9266202463845742
[305] recall 1.0 (2, 5) all: 0.9266987693953986
[306] recall 0.8888888888888888 (9, 18) all: 0.9265175718849841
[307] recall 0.8 (15, 25) all: 0.9255150554675119
[308] recall 0.72 (25, 20) all: 0.9228362877997914
[309] recall 0.7777777777777778 (27, 23) all: 0.9208226221079692
[310] recall 1.0 (1, 1) all: 0.920863309352518
[311] recall 0.625 (16, 13) all: 0.9184505606523955
[312] recall 0.8333333333333334 (6, 6) all: 0.9181910569105691
[313] recall 0.8 (10, 10) all: 0.9175935288169869
[314] recall 1.0 (10, 12) all: 0.9180080482897385
[315] recall 1.0 (3, 4) all: 0.9181315921647414
[316] recall 0.8780487804878049 (41, 43) all: 0.9173228346456693
[317] recall 0.8333333333333334 (12, 11) all: 0.9168297455968689
[318] recall 0.4444444444444444 (36, 19) all: 0.9086538461538461
[319] recall 0.9565217391304348 (23, 25) all: 0.9091773656680932
[320] recall 0.8 (10, 12) all: 0.9086606720302887
[321] recall 0.8 (5, 4) all: 0.9084041548630784
[322] recall 1.0 (2, 2) all: 0.9084905660377358
[323] recall 0.8 (40, 36) all: 0.9064814814814814
[324] recall 1.0 (8, 12) all: 0.9068265682656826
[325] recall 1.0 (5, 6) all: 0.9070409572020248
[326] recall 0.8 (10, 8) all: 0.9065506184150252
[327] recall 0.7894736842105263 (19, 16) all: 0.9055404178019982
[328] recall 0.9375 (16, 17) all: 0.9057709648331831
[329] recall 0.9545454545454546 (22, 28) all: 0.90625
[330] recall 1.0 (4, 4) all: 0.9064171122994652
[331] recall 0.5555555555555556 (9, 6) all: 0.9050155348424324
[332] recall 1.0[13:18:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:19:08] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:20:21] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:20:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:20:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:20:49] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:20:53] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:21:00] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:21:41] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:22:49] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:23:21] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:24:00] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:24:20] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:24:33] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:24:39] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:24:56] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:25:13] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:25:21] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:25:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:26:06] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:26:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:26:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:27:33] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:28:11] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:28:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:29:18] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:29:41] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:29:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:30:10] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:30:18] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:30:28] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:30:47] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:31:04] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:31:10] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:31:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:31:43] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:32:59] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:33:13] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:33:20] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:33:31] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
 1
box_num:  0
boxes.shape[0]:  9
box_num:  5
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  6
box_num:  6
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  11
box_num:  2
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  8
box_num:  2
boxes.shape[0]:  8
box_num:  4
boxes.shape[0]:  9
box_num:  4
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  7
box_num:  5
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  9
box_num:  7
boxes.shape[0]:  36
box_num:  20
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  13
box_num:  7
boxes.shape[0]:  6
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  1
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  10
box_num:  1
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  20
box_num:  12
boxes.shape[0]:  41
box_num:  13
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  15
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  44
box_num:  25
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  4
boxes.shape[0]:  7
box_num:  0
boxes.shape[0]:  7
box_num:  2
boxes.shape[0]:  10
box_num:  0
boxes.shape[0]:  20
box_num:  9
boxes.shape[0]:  92
box_num:  33
boxes.shape[0]:  16
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  7
boxes.shape[0]:  23
box_num:  18
boxes.shape[0]:  11
box_num:  6
boxes.shape[0]:  16
box_num:  10
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  11
box_num:  7
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  18
box_num:  14
boxes.shape[0]:  25
box_num:  16
boxes.shape[0]:  20
box_num:  5
boxes.shape[0]:  23
box_num:  6
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  13
box_num:  3
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  10
box_num:  5
boxes.shape[0]:  12
box_num:  1
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  43
box_num:  8
boxes.shape[0]:  11
box_num:  11
boxes.shape[0]:  19
box_num:  5
boxes.shape[0]:  25
box_num:  13
boxes.shape[0]:  12
box_num:  9
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  36
box_num:  7
boxes.shape[0]:  12
box_num:  5
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  8
box_num:  1
boxes.shape[0]:  16
box_num:  6
boxes.shape[0]:  17
box_num:  6
boxes.shape[0]:  28
box_num:  8
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  10
box_num:  2
boxes.shape[0]:  16
box_num:  5
boxes.shape[0]:  16
box_num:  12
boxes.shape[0]:  13
box_num:  2
boxes.shape[0]:  38
box_num:  15
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  13
box_num:  3
boxes.shape[0]:  61
box_num:  22
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  7
box_num:  0
boxes.shape[0]:  19
box_num:  13
boxes.shape[0]:  8
box_num:  3
boxes.shape[0]:  25
box_num:  5
boxes.shape[0]:  16
box_num:  8
boxes.shape[0]:  12
box_num:  5
boxes.shape[0]:  18
box_num:  3
boxes.shape[0]:  17
box_num:  1
boxes.shape[0]:  19
box_num:  4
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  8
box_num:  2
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  7
box_num:  2
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  42
box_num:  6
boxes.shape[0]:  16
box_num:  5
boxes.shape[0]:  18
box_num:  8
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  21
box_num:  4
boxes.shape[0]:  9
box_num:  3
boxes.shape[0]:  14
box_num:  5
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  11
box_num:  2
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  9
box_num:  4
boxes.shape[0]:  7
box_num:  3
boxes.shape[0]:  6
box_num:  4
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  18
box_num:  4
boxes.shape[0]:  13
box_num:  4
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  10
box_num:  5
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  18
box_num:  10
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  9
box_num:  4
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  17
box_num:  7
boxes.shape[0]:  10
box_num:  1
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  10
box_num:  6
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  10
box_num:  9
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  8
box_num:  4
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  6
box_num:  4
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  25
box_num:  21
boxes.shape[0]:  11
box_num:  11
boxes.shape[0]:  14
box_num:  0
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  8
box_num:  7
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  10
box_num:  5
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  7
box_num:  2
boxes.shape[0]:  10
box_num:  5
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  2
boxes.shape[0]:  10
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  18
box_num:  4
boxes.shape[0]:  7
box_num:  0
boxes.shape[0]:  20
box_num:  4
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  8
box_num:  3
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  7
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  7
box_num:  1
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  16
box_num:  8
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  9
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  2
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  12
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  [13:34:57] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:35:15] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:35:21] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
 (10, 10) all: 0.9054352629253204
[333] recall 0.9411764705882353 (17, 16) all: 0.9057017543859649
[334] recall 0.9230769230769231 (13, 16) all: 0.9058002616659399
[335] recall 1.0 (10, 13) all: 0.9062092922275293
[336] recall 0.8 (35, 38) all: 0.9046193327630453
[337] recall 1.0 (4, 4) all: 0.9047822374039283
[338] recall 1.0 (11, 13) all: 0.9052273693157671
[339] recall 0.8431372549019608 (51, 61) all: 0.903910149750416
[340] recall 1.0 (3, 3) all: 0.9040299127544661
[341] recall 1.0 (6, 7) all: 0.904268545379196
[342] recall 0.8823529411764706 (17, 19) all: 0.9041152263374486
[343] recall 1.0 (8, 8) all: 0.9044298605414274
[344] recall 0.9473684210526315 (19, 25) all: 0.9047619047619048
[345] recall 1.0 (13, 16) all: 0.9052631578947369
[346] recall 0.8888888888888888 (9, 12) all: 0.9052037111738604
[347] recall 0.8888888888888888 (18, 18) all: 0.9050861033239888
[348] recall 0.8333333333333334 (18, 17) all: 0.904572564612326
[349] recall 0.5555555555555556 (18, 19) all: 0.9020923805763916
[350] recall 0.75 (4, 5) all: 0.9018525817895152
[351] recall 1.0 (2, 5) all: 0.9019298936589208
[352] recall 0.6 (10, 8) all: 0.9007453903491566
[353] recall 0.8 (5, 5) all: 0.9005481597494127
[354] recall 0.875 (8, 7) all: 0.9004683840749415
[355] recall 0.8 (5, 5) all: 0.9002726918582002
[356] recall 0.85 (40, 42) all: 0.8995013425393172
[357] recall 0.875 (16, 16) all: 0.8993518871521159
[358] recall 0.75 (20, 18) all: 0.8982217177449867
[359] recall 0.75 (4, 4) all: 0.8979977332829618
[360] recall 1.0 (19, 21) all: 0.8987246811702926
[361] recall 1.0 (5, 9) all: 0.8989142643204793
[362] recall 1.0 (12, 14) all: 0.899366380916884
[363] recall 1.0 (3, 3) all: 0.8994787788533135
[364] recall 1.0 (11, 11) all: 0.899888765294772
[365] recall 1.0 (2, 3) all: 0.8999629492404594
[366] recall 0.875 (8, 9) all: 0.8998891762098263
[367] recall 1.0 (7, 7) all: 0.900147383935151
[368] recall 0.8333333333333334 (6, 6) all: 0.9
[369] recall 1.0 (5, 5) all: 0.9001834862385321
[370] recall 1.0 (17, 18) all: 0.9008023340627279
[371] recall 1.0 (13, 13) all: 0.9012704174228675
[372] recall 1.0 (2, 2) all: 0.901342038447588
[373] recall 1.0 (1, 1) all: 0.9013778100072516
[374] recall 1.0 (8, 10) all: 0.9016630513376718
[375] recall 1.0 (6, 6) all: 0.9018759018759018
[376] recall 0.7142857142857143 (7, 6) all: 0.9014033825116948
[377] recall 0.9 (20, 18) all: 0.9013933547695605
[378] recall 1.0 (6, 6) all: 0.9016042780748663
[379] recall 1.0 (9, 9) all: 0.9019189765458422
[380] recall 1.0 (2, 3) all: 0.9019886363636364
[381] recall 1.0 (4, 5) all: 0.902127659574468
[382] recall 1.0 (5, 5) all: 0.9023008849557522
[383] recall 1.0 (4, 4) all: 0.9024390243902439
[384] recall 0.8333333333333334 (18, 17) all: 0.9020021074815595
[385] recall 1.0 (9, 10) all: 0.9023109243697479
[386] recall 1.0 (3, 3) all: 0.9024134312696747
[387] recall 1.0 (9, 10) all: 0.9027196652719666
[388] recall 1.0 (7, 8) all: 0.9029565217391304
[389] recall 1.0 (4, 5) all: 0.9030913511635985
[390] recall 1.0 (4, 4) all: 0.9032258064516129
[391] recall 1.0 (3, 4) all: 0.9033264033264033
[392] recall 1.0 (10, 10) all: 0.9036602209944752
[393] recall 1.0 (6, 6) all: 0.9038594073053067
[394] recall 1.0 (8, 8) all: 0.9041237113402062
[395] recall 1.0 (5, 5) all: 0.9042881646655232
[396] recall 1.0 (5, 5) all: 0.9044520547945205
[397] recall 1.0 (3, 3) all: 0.9045501197399931
[398] recall 0.5 (4, 5) all: 0.9039972668261018
[399] recall 1.0 (1, 2) all: 0.9040300546448088
[400] recall 0.8571428571428571 (7, 6) all: 0.9039182282793867
[401] recall 1.0 (3, 4) all: 0.9040163376446563
[402] recall 1.0 (6, 6) all: 0.9042119565217391
[403] recall 1.0 (2, 2) all: 0.9042769857433809
[404] recall 1.0 (8, 8) all: 0.9045362220717671
[405] recall 1.0 (2, 2) all: 0.9046008119079838
[406] recall 1.0 (3, 3) all: 0.9046975329503211
[407] recall 1.0 (5, 5) all: 0.9048582995951417
[408] recall 1.0 (23, 25) all: 0.9055908938734516
[409] recall 1.0 (11, 11) all: 0.9059372915276851
[410] recall 0.75 (16, 14) all: 0.9051094890510949
[411] recall 1.0 (5, 5) all: 0.9052666445842994
[412] recall 1.0 (4, 4) all: 0.9053919947072444
[413] recall 1.0 (4, 4) all: 0.9055170135447638
[414] recall 1.0 (8, 8) all: 0.9057660626029654
[415] recall 0.8 (5, 4) all: 0.9055921052631579
[416] recall 1.0 (8, 8) all: 0.9058398950131233
[417] recall 1.0 (4, 5) all: 0.9059633027522935
[418] recall 1.0 (1, 2) all: 0.9059941041598428
[419] recall 1.0 (8, 10) all: 0.9062397909180007
[420] recall 0.0 (1, 2) all: 0.9059438275636839
[421] recall 1.0 (3, 4) all: 0.9060358890701469
[422] recall 0.8571428571428571 (7, 7) all: 0.9059244791666666
[423] recall 0.6 (5, 10) all: 0.9054273643158921
[424] recall 1.0 (1, 1) all: 0.905458089668616
[425] recall 1.0 (5, 7) all: 0.9056114174505352
[426] recall 0.5294117647058824 (17, 10) all: 0.9035483870967742
[427] recall 1.0 (1, 1) all: 0.9035794904869398
[428] recall 1.0 (2, 4) all: 0.9036416371253626
[429] recall 0.8947368421052632 (19, 18) all: 0.9035874439461884
[430] recall 1.0 (5, 7) all: 0.9037416053725615
[431] recall 1.0 (15, 20) all: 0.9042011457670274
[432] recall 1.0 (5, 5) all: 0.9043533523991103
[433] recall 1.0 (2, 2) all: 0.904414099714195
[434] recall 1.0 (1, 2) all: 0.9044444444444445
[435] recall 1.0 (6, 8) all: 0.9046261089987325
[436] recall 1.0 (2, 2) all: 0.9046865104496516
[437] recall 1.0 (3, 3) all: 0.9047769693135084
[438] recall 1.0 (1, 1) all: 0.9048070841239721
[439] recall 1.0 (2, 2) all: 0.9048672566371682
[440] recall 1.0 (4, 4) all: 0.9049873737373737
[441] recall 1.0 (1, 2) all: 0.9050173556326917
[442] recall 1.0 (2, 2) all: 0.9050772626931567
[443] recall 1.0 (2, 2) all: 0.9051370942325875
[444] recall 1.0 (6, 6) all: 0.9053161371500472
[445] recall 0.35294117647058826 (17, 7) all: 0.9023779724655819
[446] recall 1.0 (1, 1) all: 0.9024085079762277
[447] recall 1.0 (2, 2) all: 0.9024695217255392
[448] recall 0.0 (1, 4) all: 0.9021875
[449] recall 0.875 (8, 7) all: 0.9021197007481296
[450] recall 0.6 (5, 6) all: 0.9016495487083722
[451] recall 1.0 (3, 4) all: 0.9017412935323383
[452] recall 0.4 (5, 3) all: 0.9009624340266997
[453] recall 1.0 (2, 2) all: 0.9010238907849829
[454] recall 1.0 (1, 2) all: 0.9010545905707196
[455] recall 1.0 (1, 5) all: 0.9010852713178295
[456] recall 1.0 (1, 1) all: 0.9011159330440174
[457] recall 1.0 (3, 4) all: 0.901207804273769
[458] recall 0.3076923076923077 (13, 6) all: 0.8988278840222085
[459] recall 1.0 (4, 4) all: 0.8989525569932224
[460] recall 1.0 (1, 2) all: 0.8989836772405297
[461] recall 0.7333333333333333 (15, 16) all: 0.8982219497240956
[462] recall 1.0 (1, 2) all: 0.8982531412810297
[463] recall 1.0 (8, 9) all: 0.8985019871598899
[464] recall 1.0 (1, 1) all: 0.8985330073349633
[465] recall 1.0 (4, 5) all: 0.8986568986568987
[466] recall 1.0 (1, 1) all: 0.8986878242294781
[467] recall 1.0 (1, 3) all: 0.8987187309334961
[468] recall 1.0 (1, 2) all: 0.8987496187862153
[469] recall 1.0 (4, 5) all: 0.8988729820286323
[470] recall 0.0 (1, 1) all: 0.8985992691839221
[471] recall 1.0 (8, 8) all: 0.8988456865127582
[472] recall 0.8 (5, 6) all: 0.8986957840461025
[473] recall 1.0 (9, 12) all: 0.8989715668481548
[474] recall 1.0 (1, 1) all: 0.8990021167221046
[475] recall 1.0 (1, 1) all: 0.8990326481257558
[476] recall 1.0 (1, 3) all: 0.8990631610758537
[477] recall 1.0 (1, 1) all: 0.8990936555891239
[478] recall 0.0 (1, 1) all: 0.8988221081244337
[479] recall 1.0 (5, 5) all: 0.8989746682750301
[480] recall 1.0 (1, 1) all: 0.899005125113054
[481] recall 1.0 (1, 1) all: 0.8990355635925256
[482] recall 1.0 (6, 6) all: 0.8992178098676293
[483] recall 1.0 (2, 3) all: 0.8992784125075165
[484] recall 1.0 (3, 5) all: 0.8993691799339141
[485] recall 1.0 (1, 1) all: 0.8993993993993994
[486] recall 1.0 (2, 2) all: 0.8994597839135654
[487] recall 1.0 (1, 1) all: 0.8994899489948995
[488] recall 1.0 (1, 1) all: 0.8995200959808038
[489] recall 1.0 (1, 1) all: 0.8995502248875562
[490] recall 1.0 (1, 1) all: 0.8995803357314148
[491] recall 1.0 (1, 2) all: 0.8996104285286185
[492] recall 1.0 (3, 4) all: 0.8997005988023952
[493] recall 1.0 (1, 1) all: 0.8997306195749776
[494] recall 1.0 (1, 1) all: 0.8997606223818073
[495] recall 1.0 (1, 1) all: 0.8997906072390068
[496][13:35:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:35:50] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:36:13] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:36:36] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:37:03] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:37:33] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:37:52] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:38:22] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:38:44] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:39:11] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:39:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:39:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:39:46] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:39:53] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:39:57] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:40:05] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:40:32] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:40:41] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:40:57] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:41:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:41:33] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:41:36] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:41:55] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:42:02] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:42:29] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:43:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:43:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:44:11] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:45:13] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:45:21] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:45:33] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:46:07] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:46:09] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:46:53] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:46:55] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:46:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:47:01] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:47:04] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:47:22] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:47:26] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:47:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:47:34] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:48:08] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:48:15] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:48:18] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:48:40] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:48:56] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:49:06] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:49:11] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:49:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:49:49] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:49:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:50:07] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:50:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:51:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:51:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:51:43] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:51:50] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:52:05] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:52:14] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:52:25] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:52:59] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:53:04] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
 recall 0.75 (4, 4) all: 0.8996115924708694
[497] recall 0.9090909090909091 (11, 11) all: 0.899642644431209
[498] recall 0.6666666666666666 (3, 2) all: 0.8994346920559357
[499] recall 1.0 (1, 1) all: 0.8994646044021416
[500] recall 1.0 (2, 2) all: 0.8995243757431629
[501] recall 1.0 (1, 1) all: 0.899554234769688
[502] recall 1.0 (18, 21) all: 0.9000886786875554
[503] recall 1.0 (6, 6) all: 0.9002655650634406
[504] recall 0.8571428571428571 (7, 6) all: 0.9001766784452296
[505] recall 1.0 (5, 6) all: 0.9003234342840342
[506] recall 1.0 (1, 1) all: 0.900352733686067
[507] recall 1.0 (2, 2) all: 0.9004112808460635
[508] recall 1.0 (1, 1) all: 0.9004405286343612
[509] recall 1.0 (10, 11) all: 0.9007320644216691
[510] recall 1.0 (3, 7) all: 0.9008191925102399
[511] recall 1.0 (5, 5) all: 0.9009640666082384
[512] recall 1.0 (5, 5) all: 0.9011085180863477
[513] recall 1.0 (2, 4) all: 0.9011661807580175
[514] recall 1.0 (6, 6) all: 0.9013387660069848
[515] recall 1.0 (1, 1) all: 0.9013674716322374
[516] recall 1.0 (9, 9) all: 0.9016250725478816
[517] recall 1.0 (3, 3) all: 0.9017106407654393
[518] recall 1.0 (1, 1) all: 0.9017391304347826
[519] recall 1.0 (4, 6) all: 0.9018529241459178
[520] recall 1.0 (1, 3) all: 0.9018813314037627
[521] recall 1.0 (2, 2) all: 0.9019380966155627
[522] recall 1.0 (2, 2) all: 0.9019947961838681
[523] recall 0.8 (5, 4) all: 0.9018475750577367
[524] recall 1.0 (3, 3) all: 0.9019325064897606
[525] recall 1.0 (1, 2) all: 0.9019607843137255
[526] recall 1.0 (1, 1) all: 0.9019890458345344
[527] recall 1.0 (2, 3) all: 0.9020455200230482
[528] recall 0.5 (2, 3) all: 0.9018139936654189
[529] recall 1.0 (2, 3) all: 0.9018705035971223
[530] recall 0.9285714285714286 (14, 13) all: 0.9019776440240757
[531] recall 1.0 (3, 3) all: 0.9020618556701031
[532] recall 1.0 (4, 4) all: 0.9021739130434783
[533] recall 0.8333333333333334 (12, 15) all: 0.9019384264538198
[534] recall 1.0 (3, 4) all: 0.902022215892908
[535] recall 1.0 (3, 3) all: 0.9021058622652248
[536] recall 1.0 (1, 3) all: 0.9021337126600284
[537] recall 1.0 (1, 1) all: 0.9021615472127418
[538] recall 0.6666666666666666 (6, 4) all: 0.9017603634298694
[539] recall 1.0 (1, 2) all: 0.9017882486517173
[540] recall 0.4444444444444444 (9, 6) all: 0.9006228765571914
[541] recall 1.0 (2, 3) all: 0.900679117147708
[542] recall 1.0 (1, 1) all: 0.9007072135785007
[543] recall 1.0 (1, 3) all: 0.9007352941176471
[544] recall 1.0 (2, 3) all: 0.9007914075749011
[545] recall 1.0 (4, 5) all: 0.9009034443817052
[546] recall 1.0 (3, 17) all: 0.9009873060648801
[547] recall 1.0 (2, 4) all: 0.9010431350436989
[548] recall 1.0 (4, 4) all: 0.9011546043368065
[549] recall 1.0 (1, 4) all: 0.9011824324324325
[550] recall 1.0 (2, 2) all: 0.9012380416432189
[551] recall 1.0 (2, 2) all: 0.9012935883014623
[552] recall 1.0 (22, 25) all: 0.9019005030743432
[553] recall 1.0 (1, 1) all: 0.9019279128248114
[554] recall 1.0 (8, 10) all: 0.9021466406467801
[555] recall 1.0 (5, 6) all: 0.90228285077951
[556] recall 1.0 (21, 21) all: 0.9028508164959868
[557] recall 1.0 (4, 6) all: 0.9029582526956041
[558] recall 1.0 (2, 4) all: 0.903011881735286
[559] recall 1.0 (6, 6) all: 0.9031724137931034
[560] recall 1.0 (5, 6) all: 0.903305785123967
[561] recall 1.0 (2, 2) all: 0.9033590308370044
[562] recall 1.0 (1, 1) all: 0.9033856317093312
[563] recall 1.0 (3, 3) all: 0.9034653465346535
[564] recall 1.0 (3, 5) all: 0.9035449299258038
[565] recall 1.0 (10, 11) all: 0.9038092628117292
[566] recall 0.9259259259259259 (27, 31) all: 0.9039717083786725
[567] recall 1.0 (2, 2) all: 0.9040239260467645
[568] recall 1.0 (4, 4) all: 0.9041281912004345
[569] recall 1.0 (5, 6) all: 0.9042582045023054
[570] recall 1.0 (4, 4) all: 0.9043619615280412
[571] recall 1.0 (3, 4) all: 0.9044396318354088
[572] recall 1.0 (1, 1) all: 0.9044654939106901
[573] recall 1.0 (3, 3) all: 0.9045429962141698
[574] recall 1.0 (3, 3) all: 0.9046203728721967
[575] recall 1.0 (10, 13) all: 0.9048773915386689
[576] recall 0.875 (8, 8) all: 0.9048131218069374
[577] recall 1.0 (8, 22) all: 0.9050174403005098
[578] recall 1.0 (7, 7) all: 0.9051955008034279
[579] recall 1.0 (4, 4) all: 0.9052969502407705
[580] recall 1.0 (4, 4) all: 0.9053981827899519
[581] recall 1.0 (3, 3) all: 0.9054739652870494
[582] recall 1.0 (2, 2) all: 0.9055244195356285
[583] recall 1.0 (11, 12) all: 0.9058009579563597
[584] recall 1.0 (3, 4) all: 0.9058760967827706
[585] recall 1.0 (3, 4) all: 0.905951115834219
[586] recall 1.0 (7, 9) all: 0.9061256961018298
[587] recall 1.0 (4, 4) all: 0.9062251655629139
[588] recall 0.9444444444444444 (18, 18) all: 0.9064065383601371
[589] recall 1.0 (2, 2) all: 0.9064558629776021
[590] recall 1.0 (3, 6) all: 0.9065297525013165
[591] recall 1.0 (1, 2) all: 0.9065543564095815
[592] recall 1.0 (1, 1) all: 0.906578947368421
[593] recall 1.0 (3, 3) all: 0.906652642650539
[594] recall 1.0 (5, 5) all: 0.9067752100840336
[595] recall 1.0 (2, 2) all: 0.9068241469816273
[596] recall 1.0 (1, 1) all: 0.9068485961689845
[597] recall 1.0 (2, 2) all: 0.9068974560713349
[598] recall 1.0 (4, 5) all: 0.9069950222687975
[599] recall 0.8333333333333334 (6, 10) all: 0.9068794140727178
[600] recall 1.0 (3, 3) all: 0.9069524307370622
[601] recall 1.0 (4, 4) all: 0.9070496083550914
[602] recall 1.0 (1, 1) all: 0.9070738710519447
[603] recall 1.0 (6, 6) all: 0.9072191816523325
[604] recall 1.0 (1, 1) all: 0.9072433559145389
[605] recall 1.0 (3, 3) all: 0.9073158031762562
[606] recall 1.0 (3, 3) all: 0.9073881373569199
[607] recall 1.0 (3, 6) all: 0.9074603587210813
[608] recall 1.0 (5, 5) all: 0.9075804776739356
[609] recall 1.0 (5, 5) all: 0.907700285195748
[610] recall 1.0 (6, 6) all: 0.90784364483562
[611] recall 1.0 (4, 4) all: 0.9079389707783811
[612] recall 1.0 (3, 3) all: 0.9080103359173126
[613] recall 1.0 (3, 3) all: 0.9080815904983217
[614] recall 1.0 (1, 1) all: 0.9081053175012906
[615] recall 1.0 (1, 1) all: 0.9081290322580645
[616] recall 1.0 (2, 2) all: 0.9081764250709311
[617] recall 1.0 (1, 1) all: 0.9082001031459516
[618] recall 1.0 (1, 1) all: 0.9082237690126321
[619] recall 1.0 (2, 2) all: 0.9082710641587219
[620] recall 1.0 (2, 2) all: 0.9083183105845996
[621] recall 1.0 (2, 2) all: 0.9083655083655083
[622] recall 0.75 (8, 8) all: 0.9080400719239661
[623] recall 0.8333333333333334 (6, 5) all: 0.9079251090023083
[624] recall 1.0 (2, 2) all: 0.9079723147910792
[625] recall 1.0 (2, 2) all: 0.9080194722008711
[626] recall 1.0 (2, 2) all: 0.9080665813060179
[627] recall 1.0 (2, 5) all: 0.9081136421807013
[628] recall 1.0 (2, 2) all: 0.9081606548989511
[629] recall 0.0 (1, 2) all: 0.907928388746803
[630] recall 1.0 (1, 1) all: 0.9079519304525697
[631] recall 1.0 (1, 1) all: 0.9079754601226994
[632] recall 1.0 (1, 1) all: 0.9079989777664196
[633] recall 1.0 (2, 2) all: 0.9080459770114943
[634] recall 1.0 (2, 2) all: 0.9080929282614245
[635] recall 1.0 (2, 2) all: 0.9081398315896912
[636] recall 1.0 (2, 2) all: 0.9081866870696251
[637] recall 1.0 (2, 2) all: 0.9082334947744073
[638] recall 1.0 (3, 3) all: 0.9083036169128884
[639] recall 1.0 (1, 1) all: 0.9083269671504965
[640] recall 1.0 (1, 1) all: 0.9083503054989817
[641] recall 1.0 (1, 2) all: 0.9083736319674217
[642] recall 1.0 (1, 1) all: 0.9083969465648855
[643] recall 1.0 (3, 3) all: 0.9084668192219679
[644] recall 1.0 (1, 1) all: 0.9084900864260295
[645] recall 1.0 (1, 1) all: 0.9085133418043202
[646] recall 1.0 (2, 2) all: 0.9085598171196343
[647] recall 1.0 (2, 2) all: 0.9086062452399086
[648] recall 1.0 (2, 2) all: 0.9086526262369957
[649] recall 1.0 (2, 2) all: 0.9086989601826021
[650] recall 1.0 (7, 9) all: 0.9088607594936708
[651] recall 1.0 (1, 1) all: 0.908883826879271
[652] recall 1.0 (1, 1) all: 0.9089068825910931
[653] recall 1.0 (3, 4) all: 0.9089759797724399
[654] recall 1.0 (3, 3) all: 0.9090449722081859
[655] recall 1.0 (7, 8) all: 0.9092055485498108
[656] recall 1.0 (2, 2) all: 0.9092513234182001
[657] recall 1.0 (1, 1) all: 0.9092741935483871
[658] recall 1.0 (1, 1) all: 0.909297052154195
[659] recall 1.0 (1, 1) all: 0.9093198992443325
[660] recall 1.0 (4, 4) all: 0.9094111726220433
[661] recall 1.0 (2, 2) all: 0.9094567404426559
[662] recall 1.0 (1, 3) all: 0.9094795071662057
[663][13:54:09] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:54:13] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:54:55] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:55:01] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:55:05] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:55:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:55:47] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:56:28] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:57:03] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:57:09] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:57:17] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:57:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:57:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:58:04] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:58:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:58:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:59:32] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[13:59:43] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:00:28] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:00:52] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:01:10] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:01:13] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:01:45] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:01:57] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:02:32] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
1
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  11
box_num:  5
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  21
box_num:  9
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  11
box_num:  9
boxes.shape[0]:  7
box_num:  4
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  9
box_num:  4
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  13
box_num:  3
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  15
box_num:  5
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  17
box_num:  2
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  25
box_num:  17
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  10
box_num:  3
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  21
box_num:  21
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  6
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  11
box_num:  3
boxes.shape[0]:  31
box_num:  13
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  6
box_num:  4
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  13
box_num:  3
boxes.shape[0]:  8
box_num:  6
boxes.shape[0]:  22
box_num:  5
boxes.shape[0]:  7
box_num:  5
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  12
box_num:  6
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  9
box_num:  3
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  18
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  10
box_num:  9
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  6
box_num:  6
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  8
box_num:  6
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  9
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  22
box_num:  8
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  6
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  33
box_num:  7
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  12
box_num:  12
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  22
box_num:  9
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  61
box_num:  11
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  14
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  6
box_num:  6
boxes.shape[0]:  12
box_num:  9
boxes.shape[0]:  7
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  14
box_num:  14
boxes.shape[0]:  11
box_num:  10
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]: [14:02:42] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:02:46] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:02:50] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:02:54] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:03:01] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:03:07] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:03:22] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:03:56] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:04:35] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:04:55] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:05:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:05:25] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:05:33] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:06:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:07:00] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:07:18] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:07:25] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:07:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:07:47] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:08:06] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:08:27] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:09:42] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:09:54] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:09:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:10:10] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:10:41] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:10:45] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:10:48] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:11:04] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:11:11] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:11:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
 recall 1.0 (1, 4) all: 0.9095022624434389
[664] recall 1.0 (1, 1) all: 0.9095250062829857
[665] recall 1.0 (20, 22) all: 0.9099774943735934
[666] recall 1.0 (1, 2) all: 0.91
[667] recall 1.0 (1, 1) all: 0.9100224943764059
[668] recall 1.0 (1, 1) all: 0.9100449775112444
[669] recall 1.0 (1, 1) all: 0.9100674494129403
[670] recall 1.0 (1, 1) all: 0.9100899100899101
[671] recall 1.0 (1, 1) all: 0.9101123595505618
[672] recall 0.7142857142857143 (7, 7) all: 0.9097706879361914
[673] recall 1.0 (1, 1) all: 0.9097931721903812
[674] recall 1.0 (4, 4) all: 0.909882997261638
[675] recall 1.0 (1, 3) all: 0.9099054255848681
[676] recall 1.0 (1, 1) all: 0.9099278427469519
[677] recall 1.0 (1, 1) all: 0.9099502487562189
[678] recall 1.0 (1, 1) all: 0.9099726436209898
[679] recall 1.0 (1, 2) all: 0.9099950273495774
[680] recall 1.0 (1, 1) all: 0.9100173999502859
[681] recall 1.0 (1, 1) all: 0.9100397614314115
[682] recall 1.0 (3, 3) all: 0.9101067792401292
[683] recall 1.0 (2, 2) all: 0.9101514023330851
[684] recall 1.0 (1, 1) all: 0.9101736972704715
[685] recall 1.0 (3, 4) all: 0.9102405157451029
[686] recall 1.0 (1, 1) all: 0.9102627664848786
[687] recall 1.0 (7, 7) all: 0.9104182133135362
[688] recall 1.0 (2, 2) all: 0.9104625278258719
[689] recall 1.0 (4, 4) all: 0.9105510254509513
[690] recall 1.0 (1, 1) all: 0.9105731225296443
[691] recall 1.0 (1, 1) all: 0.9105952086935045
[692] recall 1.0 (1, 2) all: 0.9106172839506173
[693] recall 1.0 (2, 3) all: 0.9106614017769002
[694] recall 1.0 (3, 3) all: 0.910727496917386
[695] recall 1.0 (1, 4) all: 0.9107495069033531
[696] recall 1.0 (1, 2) all: 0.9107715060389451
[697] recall 1.0 (3, 3) all: 0.9108374384236453
[698] recall 1.0 (1, 4) all: 0.9108593942378724
[699] recall 1.0 (1, 1) all: 0.9108813392417529
[700] recall 1.0 (2, 2) all: 0.9109251968503937
[701] recall 1.0 (6, 6) all: 0.9110565110565111
[702] recall 1.0 (1, 2) all: 0.9110783591255219
[703] recall 1.0 (1, 1) all: 0.9111001964636543
[704] recall 1.0 (4, 4) all: 0.9111874386653582
[705] recall 1.0 (32, 33) all: 0.9118792599805258
[706] recall 1.0 (2, 2) all: 0.9119221411192214
[707] recall 1.0 (2, 2) all: 0.9119649805447471
[708] recall 1.0 (1, 2) all: 0.911986384634087
[709] recall 1.0 (2, 2) all: 0.9120291616038882
[710] recall 1.0 (1, 3) all: 0.9120505344995141
[711] recall 1.0 (2, 2) all: 0.9120932491500728
[712] recall 1.0 (4, 4) all: 0.9121785540999515
[713] recall 1.0 (11, 12) all: 0.9124122913138156
[714] recall 1.0 (1, 2) all: 0.9124334784712144
[715] recall 0.9473684210526315 (19, 22) all: 0.9125933060438237
[716] recall 1.0 (1, 1) all: 0.912614347616755
[717] recall 1.0 (4, 5) all: 0.9126984126984127
[718] recall 0.6666666666666666 (3, 3) all: 0.9125210285988945
[719] recall 1.0 (1, 1) all: 0.9125420470927439
[720] recall 1.0 (2, 3) all: 0.9125840537944284
[721] recall 1.0 (2, 2) all: 0.9126260201632261
[722] recall 0.9795918367346939 (49, 61) all: 0.9134045077105575
[723] recall 1.0 (3, 4) all: 0.913466097676624
[724] recall 0.9166666666666666 (12, 14) all: 0.9134751773049645
[725] recall 1.0 (2, 2) all: 0.9135160680529301
[726] recall 1.0 (3, 3) all: 0.9135773317591499
[727] recall 1.0 (1, 1) all: 0.9135977337110481
[728] recall 1.0 (2, 6) all: 0.9136385087305333
[729] recall 1.0 (3, 3) all: 0.9136995991511436
[730] recall 1.0 (5, 6) all: 0.9138012246820537
[731] recall 1.0 (11, 12) all: 0.9140239605355884
[732] recall 1.0 (1, 7) all: 0.914044152184124
[733] recall 1.0 (1, 2) all: 0.9140643343507866
[734] recall 1.0 (2, 4) all: 0.9141046702651959
[735] recall 1.0 (2, 3) all: 0.9141449683321604
[736] recall 1.0 (1, 2) all: 0.9141651031894934
[737] recall 1.0 (3, 3) all: 0.9142254511366299
[738] recall 1.0 (4, 4) all: 0.9143057831889487
[739] recall 1.0 (5, 5) all: 0.9144059869036483
[740] recall 1.0 (2, 2) all: 0.9144460028050491
[741] recall 1.0 (14, 14) all: 0.9147250698974837
[742] recall 1.0 (10, 11) all: 0.9149232914923291
[743] recall 1.0 (3, 3) all: 0.9149825783972125
[744] recall 1.0 (3, 5) all: 0.915041782729805
[745] recall 1.0 (2, 2) all: 0.9150812064965197
[746] recall 1.0 (3, 6) all: 0.9151402735914677
[747] recall 0.8888888888888888 (9, 9) all: 0.9150856085145765
[748] recall 1.0 (1, 1) all: 0.9151052509831136
[749] recall 1.0 (1, 1) all: 0.9151248843663274
[750] recall 1.0 (1, 1) all: 0.9151445086705202
[751] recall 1.0 (2, 3) all: 0.915183730067021
[752] recall 1.0 (4, 7) all: 0.9152620641884092
[753] recall 1.0 (2, 3) all: 0.9153011770136165
[754] recall 1.0 (2, 4) all: 0.9153402537485582
[755] recall 0.6296296296296297 (27, 20) all: 0.9135717560751949
[756] recall 1.0 (1, 2) all: 0.9135915654366262
[757] recall 0.5 (10, 6) all: 0.9126457809284244
[758] recall 1.0 (3, 3) all: 0.9127056672760512
[759] recall 1.0 (1, 1) all: 0.9127256111491889
[760] recall 1.0 (1, 1) all: 0.912745545911375
[761] recall 1.0 (12, 13) all: 0.9129840546697039
[762] recall 1.0 (1, 1) all: 0.9130038715554544
[763] recall 1.0 (10, 12) all: 0.9132015451033856
[764] recall 1.0 (1, 1) all: 0.9132212630622444
[765] recall 0.0 (1, 1) all: 0.9130138541903248
[766] recall 0.5 (2, 3) all: 0.9128263337116913
[767] recall 1.0 (2, 2) all: 0.9128658951667801
[768] recall 1.0 (1, 2) all: 0.9128856624319419
[769] recall 1.0 (2, 2) all: 0.9129251700680272
[770] recall 1.0 (1, 1) all: 0.9129449104511449
[771] recall 1.0 (2, 2) all: 0.9129843643779741
[772] recall 0.6 (5, 4) all: 0.9126301493888638
[773] recall 0.8333333333333334 (6, 8) all: 0.9125226039783002
[774] recall 1.0 (3, 8) all: 0.9125818838942851
[775] recall 1.0 (1, 4) all: 0.9126016260162602
[776] recall 1.0 (2, 2) all: 0.9126410835214447
[777] recall 1.0 (1, 1) all: 0.9126607989167231
[778] recall 1.0 (1, 1) all: 0.9126805054151624
[779] recall 1.0 (4, 8) all: 0.9127592425608656
[780] recall 1.0 (1, 2) all: 0.9127789046653144
[781] recall 1.0 (2, 2) all: 0.9128182022978149
[782] recall 1.0 (1, 1) all: 0.9128378378378378
[783] recall 1.0 (2, 2) all: 0.9128770823953174
[784] recall 1.0 (2, 13) all: 0.9129162916291629
[785] recall 1.0 (1, 1) all: 0.9129358830146231
[786] recall 1.0 (1, 1) all: 0.9129554655870445
[787] recall 1.0 (2, 2) all: 0.9129946043165468
[788] recall 1.0 (6, 7) all: 0.9131118096093399
[789] recall 1.0 (2, 2) all: 0.9131508078994613
[790] recall 1.0 (1, 1) all: 0.913170293919677
[791] recall 1.0 (2, 2) all: 0.913209239739852
[792] recall 1.0 (7, 7) all: 0.9133452754142409
[793] recall 1.0 (2, 3) all: 0.9133840644583706
[794] recall 1.0 (1, 1) all: 0.9134034459610652
[795] recall 1.0 (5, 8) all: 0.9135002235136344
[796] recall 1.0 (2, 3) all: 0.9135388739946381
[797] recall 1.0 (2, 2) all: 0.913577489950871
[798] recall 1.0 (6, 6) all: 0.9136931311329171
[799] recall 1.0 (2, 2) all: 0.9137316094516272
[800] recall 1.0 (1, 1) all: 0.9137508357477157
[801] recall 1.0 (2, 2) all: 0.9137892626420138
[802] recall 1.0 (6, 10) all: 0.9139043381535039
[803] recall 1.0 (3, 3) all: 0.9139617607825701
[804] recall 1.0 (2, 2) all: 0.914
[805] recall 1.0 (1, 1) all: 0.9140191068651411
[806] recall 1.0 (1, 1) all: 0.9140382052421147
[807] recall 1.0 (2, 2) all: 0.9140763765541741
[808] recall 1.0 (3, 4) all: 0.9141335700022187
[809] recall 1.0 (2, 2) all: 0.9141716566866267
[810] recall 1.0 (14, 14) all: 0.9144373203625912
[811] recall 1.0 (4, 4) all: 0.9145129224652088
[812] recall 1.0 (1, 1) all: 0.9145318021201413
[813] recall 1.0 (1, 1) all: 0.914550673437845
[814] recall 1.0 (1, 1) all: 0.9145695364238411
[815] recall 1.0 (1, 1) all: 0.914588391083646
[816] recall 0.875 (8, 8) all: 0.9145186164353382
[817] recall 1.0 (1, 1) all: 0.9145374449339208
[818] recall 1.0 (1, 1) all: 0.914556265139837
[819] recall 1.0 (1, 1) all: 0.9145750770585646
[820] recall 1.0 (1, 1) all: 0.9145938806955756
[821] recall 1.0 (1, 1) all: 0.914612676056338
[822] recall 1.0 (4, 5) all: 0.9146877748460862
[823] recall 1.0 (1, 1) all: 0.9147065289074522
[824] recall 1.0 (1, 1) all: 0.9147252747252748
[825] recall 1.0 (1, 1) all: 0.9147440123049879
[826] recall 0.8 (5, 4) all: 0.9146180860403863
[827] recall 1.0 (1, 1) all: 0.9146368224709238
[828] recall 1.0 (9, 9) all: 0.9148050810337276
[829] recall 1.0 (2, 2) all: 0.9148423817863398
[830] recall 1.0 (1, 1) all: 0.9148610199168308
[831] recall 1.0 (8, 10) all:[14:12:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:12:58] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:13:15] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:13:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:14:42] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:14:45] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:14:50] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:14:57] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:15:14] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:15:19] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:15:56] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:17:05] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:19:48] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:19:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:21:38] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:24:21] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:24:49] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:25:07] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:25:40] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
 0.9150098317675334
[832] recall 0.3333333333333333 (3, 3) all: 0.9146288209606986
[833] recall 1.0 (1, 2) all: 0.9146474568871426
[834] recall 1.0 (3, 7) all: 0.9147033158813264
[835] recall 0.8333333333333334 (6, 6) all: 0.9145969498910675
[836] recall 1.0 (3, 8) all: 0.9146527324188983
[837] recall 1.0 (2, 2) all: 0.914689880304679
[838] recall 1.0 (1, 2) all: 0.9147084421235857
[839] recall 1.0 (1, 1) all: 0.9147269958668697
[840] recall 1.0 (1, 1) all: 0.9147455415397999
[841] recall 1.0 (5, 5) all: 0.9148381490332392
[842] recall 1.0 (4, 5) all: 0.9149120902973735
[843] recall 1.0 (1, 1) all: 0.9149305555555556
[844] recall 1.0 (1, 1) all: 0.9149490128010415
[845] recall 1.0 (1, 1) all: 0.9149674620390456
[846] recall 1.0 (1, 1) all: 0.9149859032747777
[847] recall 1.0 (1, 1) all: 0.9150043365134432
[848] recall 1.0 (2, 2) all: 0.9150411790203727
[849] recall 1.0 (1, 2) all: 0.9150595882990249
[850] recall 1.0 (1, 1) all: 0.9150779896013865
[851] recall 1.0 (1, 3) all: 0.9150963829326403
[852] recall 1.0 (1, 2) all: 0.9151147682979645
[853] recall 0.6 (5, 4) all: 0.9147739563054293
[854] recall 1.0 (1, 1) all: 0.9147923875432526
[855] recall 1.0 (2, 2) all: 0.9148292261132728
[856] recall 1.0 (1, 1) all: 0.9148476334558029
[857] recall 0.8 (10, 9) all: 0.9145999568686651
[858] recall 1.0 (2, 2) all: 0.9146367751670619
[859] recall 1.0 (3, 3) all: 0.9146919431279621
[860] recall 1.0 (3, 4) all: 0.9147470398277718
[861] recall 0.6 (10, 7) all: 0.9140708915145005
[862] recall 0.75 (4, 7) all: 0.9139300279029835
[863] recall 1.0 (1, 2) all: 0.9139484978540773
[864] recall 0.8571428571428571 (7, 9) all: 0.9138632954788943
[865] recall 1.0 (3, 3) all: 0.9139186295503212
[866] recall 1.0 (2, 2) all: 0.9139554794520548
[867] recall 1.0 (2, 2) all: 0.9139922978177151
[868] recall 1.0 (1, 1) all: 0.9140106951871658
[869] recall 1.0 (6, 8) all: 0.9141209143345439
[870] recall 1.0 (4, 4) all: 0.9141942369263607
[871] recall 1.0 (1, 2) all: 0.9142125480153649
[872] recall 1.0 (2, 3) all: 0.9142491467576792
[873] recall 1.0 (1, 1) all: 0.9142674344209852
[874] recall 1.0 (2, 2) all: 0.9143039863568535
[875] recall 1.0 (2, 2) all: 0.9143405071382911
[876] recall 1.0 (6, 6) all: 0.91444988295382
[877] recall 1.0 (4, 4) all: 0.914522645120136
[878] recall 1.0 (1, 2) all: 0.9145408163265306
[879] recall 1.0 (4, 4) all: 0.9146134239592183
[880] recall 1.0 (1, 2) all: 0.9146315565937566
[881] recall 1.0 (6, 7) all: 0.9147401908801697
[882] recall 1.0 (3, 6) all: 0.9147944044086477
[883] recall 1.0 (4, 4) all: 0.9148665819567979
[884] recall 1.0 (1, 1) all: 0.9148846072411603
[885] recall 1.0 (1, 1) all: 0.9149026248941575
[886] recall 1.0 (1, 1) all: 0.9149206349206349
[887] recall 1.0 (1, 1) all: 0.9149386373254338
[888] recall 1.0 (1, 1) all: 0.9149566321133912
[889] recall 1.0 (1, 1) all: 0.9149746192893401
[890] recall 1.0 (7, 26) all: 0.9151003167898627
[891] recall 1.0 (1, 1) all: 0.9151182432432432
[892] recall 1.0 (1, 1) all: 0.915136162127929
[893] recall 1.0 (8, 9) all: 0.9152792413066385
[894] recall 1.0 (1, 6) all: 0.9152970922882427
[895] recall 1.0 (1, 2) all: 0.915314935748894
[896] recall 1.0 (1, 2) all: 0.9153327716933446
[897] recall 1.0 (1, 1) all: 0.9153506001263424
[898] recall 1.0 (1, 4) all: 0.9153684210526316
[899] recall 1.0 (1, 1) all: 0.9153862344769522
[900] recall 1.0 (1, 5) all: 0.9154040404040404
[901] recall 1.0 (1, 1) all: 0.9154218388386283
[902] recall 1.0 (2, 5) all: 0.9154574132492114
[903] recall 1.0 (6, 8) all: 0.9155639571518589
[904] recall 1.0 (1, 1) all: 0.9155816883662327
[905] recall 1.0 (1, 1) all: 0.9155994121352089
[906] recall 1.0 (1, 1) all: 0.9156171284634761
[907] recall 1.0 (1, 1) all: 0.9156348373557188
[908] recall 1.0 (1, 1) all: 0.9156525388166177
[909] recall 1.0 (1, 1) all: 0.9156702328508496
[910] recall 1.0 (1, 1) all: 0.9156879194630873
[911] recall 1.0 (1, 2) all: 0.9157055986579996
[912] recall 1.0 (1, 1) all: 0.9157232704402516
[913] recall 1.0 (1, 1) all: 0.9157409348145042
[914] recall 1.0 (1, 7) all: 0.915758591785415
[915] recall 1.0 (1, 1) all: 0.9157762413576367
[916] recall 1.0 (1, 2) all: 0.915793883535819
[917] recall 1.0 (1, 1) all: 0.9158115183246073
[918] recall 0.0 (1, 2) all: 0.9156197654941374
[919] recall 1.0 (1, 1) all: 0.9156374293489637
[920] recall 1.0 (1, 1) all: 0.9156550858099624
[921] recall 1.0 (1, 1) all: 0.9156727348817745
[922] recall 0.0 (1, 2) all: 0.9154811715481171
[923] recall 1.0 (1, 1) all: 0.9154988496130516
[924] recall 1.0 (1, 2) all: 0.9155165202843998
[925] recall 1.0 (1, 1) all: 0.915534183566799
[926] recall 1.0 (1, 1) all: 0.9155518394648829
[927] recall 1.0 (4, 4) all: 0.9156223893065998
[928] recall 1.0 (1, 1) all: 0.9156400083524744
[929] recall 1.0 (1, 1) all: 0.9156576200417537
[930] recall 0.0 (1, 1) all: 0.915466499686913
[931] recall 1.0 (1, 1) all: 0.9154841402337228
[932] recall 0.5555555555555556 (9, 10) all: 0.9148094147052698
[933] recall 1.0 (2, 2) all: 0.9148448886112847
[934] recall 1.0 (1, 1) all: 0.9148626144879267
[935] recall 1.0 (4, 4) all: 0.9149334442595674
[936] recall 1.0 (2, 2) all: 0.914968814968815
[937] recall 1.0 (1, 1) all: 0.9149864892953647
[938] recall 0.4 (5, 4) all: 0.9144518272425249
[939] recall 1.0 (1, 1) all: 0.9144695868798007
[940] recall 1.0 (9, 9) all: 0.9146290924160796
[941] recall 1.0 (1, 2) all: 0.9146467785373938
[942] recall 1.0 (1, 1) all: 0.9146644573322287
[943] recall 1.0 (1, 1) all: 0.9146821288051357
[944] recall 1.0 (1, 1) all: 0.9146997929606625
[945] recall 1.0 (1, 1) all: 0.9147174498033533
[946] recall 1.0 (1, 1) all: 0.9147350993377483
[947] recall 1.0 (1, 2) all: 0.914752741568384
[948] recall 1.0 (2, 2) all: 0.9147880041365046
[949] recall 1.0 (3, 4) all: 0.9148408433236874
[950] recall 0.8333333333333334 (6, 5) all: 0.9147398843930635
[951] recall 1.0 (5, 5) all: 0.9148277995462982
[952] recall 1.0 (6, 7) all: 0.9149330587023687
[953] recall 1.0 (1, 1) all: 0.9149505766062603
[954] recall 1.0 (1, 1) all: 0.9149680872966852
[955] recall 1.0 (1, 1) all: 0.9149855907780979
[956] recall 1.0 (2, 2) all: 0.9150205761316872
[957] recall 1.0 (1, 1) all: 0.9150380580127546
[958] recall 1.0 (7, 7) all: 0.9151602300739523
[959] recall 1.0 (7, 7) all: 0.9152820512820513
[960] recall 1.0 (3, 3) all: 0.9153341533415335
[961] recall 1.0 (4, 4) all: 0.9154035231462515
[962] recall 0.8333333333333334 (6, 5) all: 0.9153027823240589
[963] recall 1.0 (1, 1) all: 0.9153201063612191
[964] recall 1.0 (1, 1) all: 0.9153374233128835
[965] recall 1.0 (1, 1) all: 0.9153547331833981
[966] recall 1.0 (3, 3) all: 0.9154066203514507
[967] recall 1.0 (2, 2) all: 0.9154411764705882
[968] recall 1.0 (2, 2) all: 0.9154757043691303
[969] recall 1.0 (4, 4) all: 0.9155446756425949
[970] recall 1.0 (1, 1) all: 0.9155619008770141
[971] recall 1.0 (2, 2) all: 0.9155963302752294
[972] recall 1.0 (1, 1) all: 0.9156135344476152
[973] recall 1.0 (6, 6) all: 0.9157166123778502
[974] recall 1.0 (1, 2) all: 0.9157337675554651
[975] recall 1.0 (8, 9) all: 0.9158707579760211
[976] recall 1.0 (1, 2) all: 0.9158878504672897
[977] recall 1.0 (1, 1) all: 0.9159049360146252
[978] recall 1.0 (18, 20) all: 0.9162112932604736
[979] recall 0.7 (10, 9) all: 0.9157745909917189
[980] recall 1.0 (1, 1) all: 0.9157915993537964
[981] recall 1.0 (7, 7) all: 0.9159104658197217
[982] recall 1.0 (4, 5) all: 0.9159782389683659
[983] recall 1.0 (5, 6) all: 0.9160628019323671
[984] recall 1.0 (4, 5) all: 0.916130329847144
[985] recall 1.0 (3, 3) all: 0.916180904522613
[986] recall 1.0 (4, 5) all: 0.9162482426189998
[987] recall 1.0 (1, 1) all: 0.9162650602409639
[988] recall 1.0 (3, 3) all: 0.9163154726068633
[989] recall 1.0 (5, 5) all: 0.9163993584603047
[990] recall 1.0 (1, 1) all: 0.9164161154539988
[991] recall 0.6666666666666666 (3, 6) all: 0.9162660256410257
[992] recall 1.0 (1, 1) all: 0.91628279591428
[993] recall 1.0 (2, 4) all: 0.9163163163163163
[994] recall 1.0 (7, 8) all: 0.9164334266293482
[995] recall 1.0 (5, 5) all: 0.9165168763730777
[996] recall 1.0 (10, 13) all: 0.9166832768586805
[997] recall 1.0 (14, 17) all: 0.9169151262174517
[998] recall 1.0 (2, 2) all: 0.9169481422610769
[999] recall 1.0 (1, 1) all: 0.9169646404449742
[1000] recall 2
box_num:  1
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  9
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  7
box_num:  3
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  20
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  13
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  12
box_num:  6
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  8
box_num:  1
boxes.shape[0]:  8
box_num:  3
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  4
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  13
box_num:  8
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  7
box_num:  4
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  7
box_num:  4
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  4
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  10
box_num:  5
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  14
box_num:  14
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  9
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  10
box_num:  7
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  7
box_num:  2
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  8
box_num:  3
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  9
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  7
box_num:  1
boxes.shape[0]:  7
box_num:  3
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  9
box_num:  4
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  7
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  7
box_num:  3
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  26
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  9
box_num:  5
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  8
box_num:  6
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  7
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  10
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  9
box_num:  9
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  7
box_num:  6
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  7
box_num:  6
boxes.shape[0]:  7
box_num:  1
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  9
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  20
box_num:  2
boxes.shape[0]:  9
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  5
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  8
box_num:  4
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  13
box_num:  7
boxes.shape[0]:  17
box_num:  5
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]: [14:27:47] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:28:07] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:28:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:28:56] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:29:11] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:29:47] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:29:59] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:30:12] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:30:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:30:19] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:30:25] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:30:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:32:27] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:32:36] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:33:15] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:34:04] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:34:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:34:49] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:35:04] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:35:06] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:36:19] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:36:25] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:36:39] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:36:54] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:37:05] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:38:01] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:38:05] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:38:23] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:38:36] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:39:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:39:47] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:39:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:40:30] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:40:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:41:16] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:41:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:41:56] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:42:35] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:42:48] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
 1.0 (1, 1) all: 0.9169811320754717
[1001] recall 1.0 (1, 1) all: 0.9169976171564734
[1002] recall 1.0 (1, 1) all: 0.9170140956918801
[1003] recall 1.0 (1, 1) all: 0.9170305676855895
[1004] recall 1.0 (2, 4) all: 0.917063492063492
[1005] recall 1.0 (2, 2) all: 0.9170963903213011
[1006] recall 1.0 (1, 2) all: 0.9171128296648821
[1007] recall 1.0 (1, 2) all: 0.9171292624900872
[1008] recall 1.0 (1, 2) all: 0.9171456888007928
[1009] recall 1.0 (1, 1) all: 0.917162108600872
[1010] recall 1.0 (1, 3) all: 0.9171785218941946
[1011] recall 1.0 (1, 2) all: 0.9171949286846276
[1012] recall 1.0 (5, 6) all: 0.9172768652285771
[1013] recall 1.0 (1, 1) all: 0.9172932330827067
[1014] recall 1.0 (1, 1) all: 0.9173095944609297
[1015] recall 1.0 (1, 1) all: 0.9173259493670886
[1016] recall 1.0 (2, 2) all: 0.9173586397785686
[1017] recall 1.0 (1, 2) all: 0.9173749752915596
[1018] recall 1.0 (2, 2) all: 0.9174076269511954
[1019] recall 1.0 (1, 1) all: 0.9174239431054919
[1020] recall 1.0 (1, 1) all: 0.9174402528145368
[1021] recall 1.0 (1, 3) all: 0.9174565560821485
[1022] recall 1.0 (1, 2) all: 0.9174728529121422
[1023] recall 1.0 (1, 3) all: 0.9174891433083301
[1024] recall 0.8333333333333334 (6, 5) all: 0.9173895899053628
[1025] recall 1.0 (2, 3) all: 0.9174221521482065
[1026] recall 1.0 (1, 1) all: 0.9174384236453202
[1027] recall 1.0 (1, 1) all: 0.9174546887312844
[1028] recall 1.0 (1, 1) all: 0.9174709474098878
[1029] recall 1.0 (1, 1) all: 0.9174871996849153
[1031] recall 1.0 (1, 1) all: 0.9175034455601496
[1032] recall 1.0 (1, 1) all: 0.9175196850393701
[1033] recall 1.0 (1, 5) all: 0.917535918126353
[1034] recall 1.0 (1, 2) all: 0.9175521448248721
[1035] recall 1.0 (1, 1) all: 0.9175683651386977
[1036] recall 1.0 (7, 10) all: 0.9176817288801572
[1037] recall 1.0 (2, 4) all: 0.9177140612725845
[1038] recall 1.0 (1, 2) all: 0.9177302179462007
[1039] recall 1.0 (3, 3) all: 0.917778649921507
[1040] recall 1.0 (1, 1) all: 0.9177947812438689
[1041] recall 1.0 (1, 2) all: 0.9178109062377403
[1042] recall 1.0 (5, 6) all: 0.917891436409955
[1043] recall 1.0 (5, 7) all: 0.9179718089271731
[1044] recall 1.0 (4, 4) all: 0.918035993740219
[1045] recall 1.0 (3, 4) all: 0.9180840664711633
[1046] recall 1.0 (6, 6) all: 0.9181800429603593
[1047] recall 0.8333333333333334 (6, 6) all: 0.9180807489760093
[1048] recall 1.0 (5, 5) all: 0.9181605611847233
[1049] recall 1.0 (5, 7) all: 0.9182402180260852
[1050] recall 1.0 (1, 2) all: 0.9182561307901907
[1051] recall 1.0 (2, 2) all: 0.9182879377431906
[1052] recall 1.0 (1, 1) all: 0.9183038319393114
[1053] recall 1.0 (14, 17) all: 0.918525703200776
[1054] recall 1.0 (3, 3) all: 0.918573090345095
[1055] recall 1.0 (1, 1) all: 0.9185888738127544
[1056] recall 1.0 (1, 1) all: 0.9186046511627907
[1057] recall 1.0 (2, 2) all: 0.9186361875242154
[1058] recall 1.0 (2, 2) all: 0.9186676994577847
[1059] recall 1.0 (5, 5) all: 0.91874637260592
[1060] recall 1.0 (1, 2) all: 0.9187620889748549
[1061] recall 1.0 (3, 8) all: 0.918809201623816
[1062] recall 1.0 (8, 9) all: 0.9189345686160972
[1063] recall 1.0 (11, 13) all: 0.9191063174114021
[1064] recall 0.8571428571428571 (7, 10) all: 0.9190228890171187
[1065] recall 1.0 (3, 4) all: 0.9190695886197616
[1066] recall 1.0 (2, 2) all: 0.9191006917755573
[1067] recall 0.8 (10, 9) all: 0.9188722669735327
[1068] recall 1.0 (6, 7) all: 0.9189655172413793
[1069] recall 0.0 (1, 1) all: 0.9187895039264509
[1070] recall 1.0 (1, 1) all: 0.918805055534278
[1071] recall 1.0 (2, 2) all: 0.9188361408882083
[1072] recall 1.0 (2, 3) all: 0.918867202449292
[1073] recall 1.0 (4, 4) all: 0.9189292543021033
[1074] recall 1.0 (2, 2) all: 0.918960244648318
[1075] recall 1.0 (1, 3) all: 0.9189757309382763
[1076] recall 1.0 (3, 4) all: 0.919022154316272
[1077] recall 1.0 (14, 15) all: 0.9192380952380952
[1078] recall 1.0 (2, 2) all: 0.9192688499619193
[1079] recall 1.0 (2, 2) all: 0.9192995812714122
[1080] recall 1.0 (6, 6) all: 0.9193916349809886
[1081] recall 1.0 (12, 12) all: 0.9195751138088012
[1082] recall 1.0 (4, 4) all: 0.9196360879454132
[1083] recall 1.0 (2, 2) all: 0.9196665403561955
[1084] recall 1.0 (7, 7) all: 0.9197729422894986
[1085] recall 1.0 (5, 5) all: 0.9198487712665406
[1086] recall 1.0 (4, 4) all: 0.9199093313184737
[1087] recall 1.0 (1, 1) all: 0.9199244570349386
[1088] recall 1.0 (5, 6) all: 0.92
[1089] recall 1.0 (1, 1) all: 0.9200150914921713
[1090] recall 1.0 (3, 3) all: 0.9200603318250377
[1091] recall 1.0 (1, 6) all: 0.9200754005655042
[1092] recall 1.0 (1, 1) all: 0.9200904636260837
[1093] recall 1.0 (1, 1) all: 0.9201055210099868
[1094] recall 1.0 (1, 1) all: 0.920120572720422
[1095] recall 1.0 (1, 2) all: 0.9201356187605952
[1096] recall 1.0 (6, 8) all: 0.9202257761053622
[1097] recall 1.0 (1, 1) all: 0.9202407825432656
[1098] recall 1.0 (1, 1) all: 0.920255783336468
[1099] recall 1.0 (1, 1) all: 0.9202707784881534
[1100] recall 1.0 (7, 7) all: 0.9203755868544601
[1101] recall 1.0 (2, 2) all: 0.9204054815092922
[1102] recall 1.0 (1, 1) all: 0.9204204204204204
[1103] recall 1.0 (1, 2) all: 0.9204353537249015
[1104] recall 1.0 (2, 2) all: 0.9204652035265428
[1105] recall 1.0 (3, 8) all: 0.9205099362579677
[1106] recall 1.0 (2, 2) all: 0.9205397301349325
[1107] recall 1.0 (2, 6) all: 0.9205695016860247
[1108] recall 1.0 (1, 1) all: 0.9205843790972092
[1109] recall 1.0 (4, 4) all: 0.9206438330525922
[1110] recall 1.0 (3, 3) all: 0.9206883651328096
[1111] recall 1.0 (2, 2) all: 0.9207180254300673
[1112] recall 1.0 (2, 2) all: 0.9207476635514019
[1113] recall 1.0 (4, 5) all: 0.9208068733657079
[1114] recall 1.0 (1, 2) all: 0.9208216619981325
[1115] recall 0.9166666666666666 (12, 11) all: 0.9208123719023663
[1116] recall 1.0 (1, 1) all: 0.9208271236959762
[1117] recall 1.0 (3, 6) all: 0.9208713461180413
[1118] recall 1.0 (3, 4) all: 0.9209155191663565
[1119] recall 1.0 (1, 1) all: 0.9209302325581395
[1120] recall 1.0 (5, 5) all: 0.921003717472119
[1121] recall 1.0 (1, 1) all: 0.9210183980672737
[1122] recall 1.0 (5, 6) all: 0.9210917192721871
[1123] recall 1.0 (1, 1) all: 0.9211063671802487
[1124] recall 1.0 (5, 9) all: 0.921179525222552
[1125] recall 1.0 (8, 10) all: 0.9212962962962963
[1126] recall 1.0 (5, 6) all: 0.9213691026827012
[1127] recall 1.0 (1, 2) all: 0.9213836477987422
[1128] recall 1.0 (1, 1) all: 0.9213981875346773
[1129] recall 1.0 (5, 5) all: 0.9214708056171471
[1130] recall 1.0 (1, 1) all: 0.9214853131350452
[1131] recall 1.0 (1, 1) all: 0.9214998152936831
[1132] recall 1.0 (2, 2) all: 0.9215288035450517
[1133] recall 1.0 (1, 1) all: 0.9215432896437142
[1134] recall 1.0 (2, 5) all: 0.9215722458018084
[1135] recall 1.0 (2, 2) all: 0.9216011805939863
[1136] recall 1.0 (1, 1) all: 0.9216156399852453
[1137] recall 1.0 (1, 1) all: 0.9216300940438872
[1138] recall 1.0 (2, 2) all: 0.9216589861751152
[1139] recall 1.0 (8, 8) all: 0.9217743419841709
[1140] recall 1.0 (1, 1) all: 0.9217887375782112
[1141] recall 1.0 (4, 4) all: 0.9218462670099301
[1142] recall 1.0 (1, 2) all: 0.9218606361463504
[1143] recall 1.0 (1, 1) all: 0.921875
[1144] recall 1.0 (1, 1) all: 0.9218893585737916
[1145] recall 1.0 (1, 2) all: 0.9219037118706358
[1146] recall 0.9090909090909091 (11, 11) all: 0.9218778653951953
[1147] recall 1.0 (1, 1) all: 0.9218921892189219
[1148] recall 1.0 (4, 4) all: 0.9219494320263832
[1149] recall 1.0 (1, 1) all: 0.9219637296208096
[1150] recall 0.8 (5, 6) all: 0.9218521229868228
[1151] recall 1.0 (3, 3) all: 0.9218950064020487
[1152] recall 0.8888888888888888 (9, 8) all: 0.9218407596785975
[1153] recall 1.0 (10, 12) all: 0.9219832300401021
[1154] recall 1.0 (1, 1) all: 0.921997448514671
[1155] recall 1.0 (1, 1) all: 0.9220116618075802
[1156] recall 1.0 (1, 2) all: 0.9220258699216615
[1157] recall 1.0 (2, 4) all: 0.9220542706246585
[1158] recall 0.0 (1, 1) all: 0.9218863801893663
[1159] recall 1.0 (6, 8) all: 0.9219716260458348
[1160] recall 1.0 (1, 3) all: 0.9219858156028369
[1161] recall 0.5714285714285714 (14, 11) all: 0.9210955922365318
[1162] recall 1.0 (1, 1) all: 0.9211099020674647
[1163] recall 1.0 (1, 1) all: 0.9211242067089755
[1164] recall 1.0 (2, 2) all: 0.921152800435019
[1165] recall 1.0 (1, 1) all: 0.9211670895251903
[1166] recall 1.0 (2, 2) all: 0.9211956521739131[14:44:22] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:44:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:44:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:46:26] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:47:20] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:47:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:48:56] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:49:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:49:40] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:50:15] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:50:21] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:50:43] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:51:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:51:59] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:52:04] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
 1
box_num:  0
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  6
box_num:  6
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  0
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  10
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  6
box_num:  4
boxes.shape[0]:  7
box_num:  0
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  6
box_num:  3
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  7
box_num:  7
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  17
box_num:  11
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  8
box_num:  4
boxes.shape[0]:  9
box_num:  4
boxes.shape[0]:  13
box_num:  5
boxes.shape[0]:  10
box_num:  3
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  9
box_num:  1
boxes.shape[0]:  7
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  15
box_num:  4
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  12
box_num:  8
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  7
box_num:  5
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  8
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  8
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  11
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  9
box_num:  2
boxes.shape[0]:  10
box_num:  1
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  8
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  11
box_num:  7
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  8
box_num:  3
boxes.shape[0]:  12
box_num:  2
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  0
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  11
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  10
box_num:  9
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  14
box_num:  8
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  10
box_num:  7
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  7
box_num:  6
boxes.shape[0]:  7
box_num:  2
boxes.shape[0]:  17
box_num:  4
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  5
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  9
box_num:  6
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  6
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  9
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  8
box_num:  5
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  6
box_num:  6
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  8
box_num:  2
boxes.shape[0]:  6
box_num:  0
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  6
box_num:  6
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  0
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  13
box_num:  7
boxes.shape[0]:  0
box_num:  0
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  12
box_num:  9
boxes.shape[0]:  5
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  23
box_num:  17
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  32
box_num:  4
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  3
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  7
box_num:  4
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  2
boxes.shape[0]:  8
box_num:  4
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  10
box_num:  4
boxes.shape[0]:  28
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  8
box_num:  5
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]: [14:52:41] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:53:14] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:53:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:53:55] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:53:59] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:54:28] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:54:46] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:55:57] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:56:12] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:56:17] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:56:24] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:56:51] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:57:00] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:57:31] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[14:57:41] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)

[1167] recall 1.0 (1, 1) all: 0.9212099257380909
[1168] recall 1.0 (1, 1) all: 0.9212241941325606
[1169] recall 1.0 (1, 1) all: 0.9212384573601303
[1170] recall 1.0 (4, 6) all: 0.9212954586574995
[1171] recall 1.0 (6, 6) all: 0.9213808060726549
[1172] recall 1.0 (2, 3) all: 0.9214092140921409
[1173] recall 1.0 (9, 10) all: 0.9215367965367965
[1174] recall 1.0 (3, 3) all: 0.9215792320173066
[1175] recall 1.0 (1, 1) all: 0.9215933669790916
[1176] recall 1.0 (1, 2) all: 0.9216074968462786
[1177] recall 1.0 (1, 1) all: 0.9216216216216216
[1178] recall 1.0 (1, 3) all: 0.9216357413078724
[1179] recall 1.0 (2, 2) all: 0.9216639654240951
[1180] recall 1.0 (4, 5) all: 0.9217203527082959
[1181] recall 1.0 (6, 6) all: 0.9218047815926659
[1182] recall 1.0 (3, 3) all: 0.9218469277757815
[1183] recall 1.0 (2, 2) all: 0.921875
[1184] recall 1.0 (2, 2) all: 0.921903052064632
[1185] recall 1.0 (2, 2) all: 0.9219310839913855
[1186] recall 1.0 (2, 2) all: 0.9219590958019376
[1187] recall 1.0 (12, 14) all: 0.9221267454350162
[1188] recall 1.0 (5, 5) all: 0.922196387050617
[1189] recall 1.0 (8, 10) all: 0.9223075549205215
[1190] recall 1.0 (1, 3) all: 0.9223214285714286
[1191] recall 1.0 (4, 4) all: 0.9223768736616702
[1192] recall 1.0 (4, 5) all: 0.922432239657632
[1193] recall 1.0 (2, 5) all: 0.9224598930481284
[1194] recall 1.0 (4, 6) all: 0.9225151407196295
[1195] recall 1.0 (4, 4) all: 0.9225703097187611
[1196] recall 1.0 (2, 7) all: 0.9225978647686833
[1197] recall 0.8571428571428571 (7, 7) all: 0.9225164385996091
[1198] recall 0.8125 (16, 17) all: 0.9222045011518696
[1199] recall 1.0 (4, 5) all: 0.9222596068709049
[1200] recall 1.0 (4, 4) all: 0.9223146345779508
[1201] recall 1.0 (3, 3) all: 0.922355854262469
[1202] recall 1.0 (1, 1) all: 0.92236958443855
[1203] recall 1.0 (7, 7) all: 0.9224655598728364
[1204] recall 1.0 (1, 1) all: 0.9224792512802401
[1205] recall 1.0 (8, 9) all: 0.9225886087109857
[1206] recall 1.0 (1, 1) all: 0.9226022566995769
[1207] recall 1.0 (6, 7) all: 0.9226840436773511
[1208] recall 1.0 (2, 2) all: 0.9227112676056338
[1209] recall 1.0 (3, 5) all: 0.9227520675699454
[1210] recall 1.0 (1, 2) all: 0.9227656579873329
[1211] recall 1.0 (8, 9) all: 0.9228742094167253
[1212] recall 1.0 (1, 1) all: 0.9228877568944318
[1213] recall 1.0 (5, 5) all: 0.922955422955423
[1214] recall 1.0 (1, 5) all: 0.9229689419196351
[1215] recall 1.0 (1, 1) all: 0.9229824561403509
[1216] recall 1.0 (4, 4) all: 0.9230364656381487
[1217] recall 1.0 (6, 8) all: 0.9231173380035026
[1218] recall 1.0 (3, 4) all: 0.9231577104848591
[1219] recall 1.0 (2, 2) all: 0.9231846019247594
[1220] recall 1.0 (4, 6) all: 0.9232383283790873
[1221] recall 0.5 (2, 3) all: 0.9230903688166404
[1222] recall 1.0 (4, 5) all: 0.9231441048034934
[1223] recall 1.0 (2, 2) all: 0.9231709446481579
[1224] recall 1.0 (1, 1) all: 0.9231843575418994
[1225] recall 1.0 (4, 4) all: 0.9232379623168179
[1226] recall 1.0 (2, 2) all: 0.923264736658528
[1227] recall 1.0 (1, 3) all: 0.923278116826504
[1228] recall 1.0 (3, 4) all: 0.923318229348205
[1229] recall 1.0 (7, 8) all: 0.9234116623150566
[1230] recall 1.0 (4, 6) all: 0.9234649504261611
[1231] recall 1.0 (4, 5) all: 0.9235181644359465
[1232] recall 1.0 (2, 2) all: 0.9235447437011295
[1233] recall 1.0 (6, 6) all: 0.9236243707689638
[1234] recall 1.0 (2, 2) all: 0.9236508762797154
[1236] recall 1.0 (1, 1) all: 0.9236641221374046
[1237] recall 1.0 (2, 2) all: 0.9236906000693722
[1238] recall 1.0 (1, 1) all: 0.9237038321484308
[1239] recall 0.7647058823529411 (17, 13) all: 0.9232365145228216
[1241] recall 1.0 (5, 6) all: 0.9233028156849197
[1242] recall 1.0 (11, 12) all: 0.923448275862069
[1243] recall 1.0 (5, 5) all: 0.9235142118863049
[1244] recall 1.0 (1, 1) all: 0.9235273854633138
[1245] recall 1.0 (3, 3) all: 0.9235668789808917
[1246] recall 1.0 (2, 2) all: 0.9235931853381518
[1247] recall 1.0 (4, 4) all: 0.9236457437661221
[1248] recall 1.0 (1, 1) all: 0.9236588720770289
[1249] recall 1.0 (23, 23) all: 0.9239595821202261
[1250] recall 1.0 (1, 4) all: 0.923972602739726
[1251] recall 1.0 (25, 32) all: 0.9242966751918159
[1252] recall 1.0 (4, 5) all: 0.9243482705742034
[1253] recall 1.0 (4, 4) all: 0.9243997956751234
[1254] recall 1.0 (3, 3) all: 0.9244383934649422
[1255] recall 1.0 (1, 1) all: 0.9244512506380806
[1256] recall 1.0 (1, 1) all: 0.9244641034365431
[1257] recall 1.0 (5, 7) all: 0.9245283018867925
[1258] recall 1.0 (1, 3) all: 0.9245411284840245
[1259] recall 1.0 (4, 7) all: 0.9245923913043478
[1260] recall 1.0 (3, 3) all: 0.9246307927346801
[1261] recall 1.0 (1, 1) all: 0.924643584521385
[1262] recall 1.0 (4, 4) all: 0.9246947082767978
[1263] recall 0.8 (10, 8) all: 0.924483576024382
[1264] recall 1.0 (5, 5) all: 0.9245474538995094
[1265] recall 0.8 (5, 5) all: 0.9244421906693712
[1266] recall 0.8181818181818182 (11, 10) all: 0.9242449805972668
[1267] recall 1.0 (1, 28) all: 0.9242577597840755
[1268] recall 1.0 (1, 1) all: 0.9242705346601451
[1269] recall 1.0 (1, 1) all: 0.924283305227656
[1270] recall 1.0 (6, 8) all: 0.9243598382749326
[1271] recall 1.0 (1, 1) all: 0.9243725787434731
[1272] recall 1.0 (3, 3) all: 0.9244107744107745
[1273] recall 0.8235294117647058 (17, 19) all: 0.9241228806446198
[1274] recall 1.0 (1, 1) all: 0.9241356159785162
[1275] recall 1.0 (1, 1) all: 0.9241483470380937
[1276] recall 1.0 (6, 7) all: 0.9242246437552389
[1277] recall 1.0 (7, 7) all: 0.9243134628265238
[1278] recall 1.0 (1, 1) all: 0.9243261342708856
[1279] recall 1.0 (1, 2) all: 0.9243388014730499
[1280] recall 1.0 (1, 1) all: 0.9243514644351465
[1281] recall 1.0 (2, 2) all: 0.9243767776476494
[1282] recall 1.0 (1, 1) all: 0.9243894279023085
[1283] recall 1.0 (1, 1) all: 0.9244020739254056
[1284] recall 1.0 (1, 1) all: 0.9244147157190635
[1285] recall 1.0 (2, 2) all: 0.9244399866265463
[1286] recall 1.0 (2, 2) all: 0.9244652406417112
[1287] recall 1.0 (1, 2) all: 0.9244778613199666
[1288] recall 1.0 (1, 1) all: 0.9244904777814902
[1289] recall 1.0 (2, 2) all: 0.9245156980627922
[1290] recall 1.0 (3, 3) all: 0.9245534969120347
[1291] recall 0.8333333333333334 (6, 7) all: 0.9244622311155578
[1292] recall 1.0 (5, 6) all: 0.9245251582805731
[1293] recall 1.0 (5, 7) all: 0.9245879806891959
[1294] recall 0.8 (10, 9) all: 0.9243809207246136
[1295] recall 1.0 (2, 3) all: 0.9244060475161987
[1296] recall 0.8 (5, 4) all: 0.9243027888446215
[1297] recall 1.0 (1, 1) all: 0.9243153526970954
[1298] recall 1.0 (5, 6) all: 0.9243781094527364
[1299] recall 1.0 (2, 2) all: 0.9244031830238727
[1300] recall 1.0 (2, 2) all: 0.9244282399734836
[1301] recall 1.0 (5, 9) all: 0.9244908097367114
[1302] recall 1.0 (8, 10) all: 0.9245907061352737
[1303] recall 1.0 (2, 3) all: 0.9246156389485866
[1304] recall 1.0 (5, 6) all: 0.9246778989098117
[1305] recall 1.0 (3, 5) all: 0.9247152055473007
[1306] recall 1.0 (2, 2) all: 0.9247400561148704
[1307] recall 1.0 (4, 4) all: 0.9247897080653142
[1308] recall 1.0 (2, 2) all: 0.9248145094806266
[1309] recall 1.0 (2, 2) all: 0.9248392945442558
[1310] recall 1.0 (2, 2) all: 0.9248640632723678
[1311] recall 0.8333333333333334 (6, 5) all: 0.9247736625514403
[1312] recall 1.0 (2, 2) all: 0.9247984202731611
[1313] recall 1.0 (1, 1) all: 0.924810793024021
[1314] recall 1.0 (8, 8) all: 0.9249096286559316
[1315] recall 1.0 (2, 2) all: 0.9249342969776609
[1316] recall 1.0 (1, 1) all: 0.9249466250615864
[1317] recall 1.0 (6, 7) all: 0.9250205086136177
[1318] recall 1.0 (7, 8) all: 0.9251065224516551
[1319] recall 1.0 (4, 4) all: 0.9251555846708156
[1320] recall 1.0 (3, 7) all: 0.9251923391717138
[1321] recall 0.875 (8, 7) all: 0.925126696092856
[1322] recall 1.0 (20, 21) all: 0.9253707022975395
[1323] recall 1.0 (8, 8) all: 0.9254678600488202
[1324] recall 1.0 (28, 36) all: 0.9258059290458448
[1325] recall 0.6363636363636364 (11, 8) all: 0.9252910737386805
[1326] recall 1.0 (1, 2) all: 0.9253031527890057
[1327] recall 0.9 (10, 10) all: 0.9252623083131558
[1328] recall 1.0 (2, 3) all: 0.925286428917218
[1329] recall 0.9090909090909091 (11, 11) all: 0.9252577319587629
[1330] recall 1.0 (2, 2) all: 0.9252818035426731
[1331] recall 1.0 (1, 2) all: 0.9252938335211721
[1332] recall 0.9 (10, 12) all: 0.9252531747307506
[1333] recall 1.0 (1, 1) all:[14:59:20] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[15:02:37] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[15:03:45] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
[15:04:18] src/operator/nn/./cudnn/./cudnn_algoreg-inl.h:97: Running performance tests to find the best convolution algorithm, this can take a while... (set the environment variable MXNET_CUDNN_AUTOTUNE_DEFAULT to 0 to disable)
 0.9252651880424301
[1334] recall 1.0 (1, 1) all: 0.9252771974931705
[1335] recall 1.0 (2, 3) all: 0.9253012048192771
[1336] recall 1.0 (3, 3) all: 0.9253371868978806
[1337] recall 1.0 (2, 2) all: 0.9253611556982343
[1338] recall 1.0 (5, 5) all: 0.92542101042502
[1339] recall 1.0 (2, 3) all: 0.9254449254449254
[1340] recall 1.0 (2, 2) all: 0.9254688251322327
[1341] recall 1.0 (7, 7) all: 0.925552353506244
[1342] recall 1.0 (1, 1) all: 0.925564270850008
[1343] recall 1.0 (10, 11) all: 0.9256832347770497
[1344] recall 1.0 (1, 1) all: 0.9256951102588686
[1345] recall 0.5 (4, 2) all: 0.9254231874800384
[1346] recall 1.0 (3, 3) all: 0.9254588986432561
[1347] recall 1.0 (5, 6) all: 0.925518341307815
[1348] recall 1.0 (9, 10) all: 0.925625099538143
[1349] recall 1.0 (5, 5) all: 0.9256842775302355
[1350] recall 1.0 (6, 8) all: 0.9257551669316375
[1351] recall 1.0 (2, 3) all: 0.9257787666878576
[1352] recall 1.0 (6, 6) all: 0.9258494760241347
[1353] recall 1.0 (1, 1) all: 0.9258612478171139
[1354] recall 0.7272727272727273 (11, 11) all: 0.9255150554675119
[1355] recall 1.0 (27, 28) all: 0.9258324128136343
[1356] recall 1.0 (6, 6) all: 0.9259025697619423
[1357] recall 1.0 (2, 2) all: 0.9259259259259259
[1358] recall 1.0 (3, 3) all: 0.9259609325771897
[1359] recall 1.0 (5, 5) all: 0.9260192035258933
[1360] recall 0.8 (10, 10) all: 0.9258211535439258
[1361] recall 1.0 (3, 3) all: 0.9258561105874961
[1362] recall 1.0 (15, 18) all: 0.9260304027581884
[1363] recall 1.0 (2, 2) all: 0.9260535798214006
[1364] recall 1.0 (4, 4) all: 0.9260998904023798
[1365] recall 0.6666666666666666 (15, 14) all: 0.9254920337394564
[1366] recall 1.0 (6, 10) all: 0.925561797752809
[1367] recall 0.75 (4, 3) all: 0.9254522769806612
[1368] recall 1.0 (2, 4) all: 0.9254755222949798
[1369] recall 0.8 (20, 29) all: 0.9250854833695991
[1370] recall 1.0 (5, 5) all: 0.9251436558471813
[1371] recall 1.0 (6, 12) all: 0.9252133436772692
[1372] recall 1.0 (4, 4) all: 0.9252597301907273
[1373] recall 1.0 (1, 1) all: 0.9252713178294574
[1374] recall 1.0 (4, 4) all: 0.9253176324759839
[1375] recall 1.0 (1, 2) all: 0.9253292021688614
[1376] recall 1.0 (15, 15) all: 0.9255023183925811
[1377] recall 1.0 (2, 2) all: 0.9255253399258344
[1378] recall 1.0 (1, 1) all: 0.9255368453576395
[1379] recall 0.92 (75, 78) all: 0.9254734270006109
[1380] recall 1.0 (5, 6) all: 0.9255302914695559
[1381] recall 0.7142857142857143 (21, 19) all: 0.9248554913294798
[1382] recall 0.7575757575757576 (33, 33) all: 0.9240199788103527
[1383] recall 0.8461538461538461 (13, 11) all: 0.9238670694864048
[1384] recall 0.8333333333333334 (18, 15) all: 0.9236215727628804
[1385] recall 1.0 (1, 1) all: 0.9236330772706733
[1386] recall 1.0 (4, 4) all: 0.923679060665362
[1387] recall 1.0 (10, 12) all: 0.9237937772433489
[1388] recall 1.0 (8, 8) all: 0.9238853025071311
[1389] recall 1.0 (2, 2) all: 0.9239081494822152
[1390] recall 1.0 (3, 4) all: 0.9239423942394239
[1391] recall 1.0 (3, 3) all: 0.9239766081871345
[1392] recall 1.0 (1, 1) all: 0.9239880059970015
[1393] recall 1.0 (3, 4) all: 0.9240221789300165
[1394] recall 1.0 (2, 2) all: 0.9240449438202247
[1395] recall 1.0 (2, 2) all: 0.9240676950726374
[1396] recall 1.0 (2, 2) all: 0.9240904326995059
[1397] recall 1.0 (1, 1) all: 0.9241017964071856
[1398] recall 0.8571428571428571 (7, 6) all: 0.92403170330492
[1399] recall 1.0 (2, 3) all: 0.9240544177007026
[1400] recall 1.0 (6, 7) all: 0.9241224794622853
[1401] recall 1.0 (1, 2) all: 0.9241338112305855
[1402] recall 1.0 (1, 1) all: 0.9241451396147529
[1403] recall 1.0 (3, 3) all: 0.924179104477612
[1404] recall 1.0 (5, 5) all: 0.9242356450410142
[1405] recall 1.0 (5, 6) all: 0.9242921013412817
[1406] recall 1.0 (2, 2) all: 0.9243146603098927
[1407] recall 1.0 (2, 2) all: 0.9243372058385463
[1408] recall 1.0 (1, 1) all: 0.9243484735666418
[1409] recall 1.0 (2, 2) all: 0.9243709989578681
[1410] recall 1.0 (1, 1) all: 0.9243822566239952
[1411] recall 1.0 (1, 1) all: 0.9243935109391278
[1412] recall 1.0 (5, 5) all: 0.9244497323022011
[1413] recall 1.0 (4, 4) all: 0.9244946492271106
[1414] recall 1.0 (2, 2) all: 0.924517087667162
 19
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  4
boxes.shape[0]:  7
box_num:  7
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  7
box_num:  4
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  7
box_num:  3
boxes.shape[0]:  9
box_num:  2
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  6
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  9
box_num:  2
boxes.shape[0]:  10
box_num:  9
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  5
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  2
boxes.shape[0]:  2
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  7
box_num:  5
boxes.shape[0]:  8
box_num:  0
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  7
box_num:  1
boxes.shape[0]:  7
box_num:  4
boxes.shape[0]:  21
box_num:  19
boxes.shape[0]:  8
box_num:  8
boxes.shape[0]:  36
box_num:  8
boxes.shape[0]:  8
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  10
box_num:  3
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  11
box_num:  3
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  12
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  7
box_num:  0
boxes.shape[0]:  1
box_num:  1
boxes.shape[0]:  11
box_num:  3
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  10
box_num:  4
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  8
box_num:  3
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  6
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  11
box_num:  2
boxes.shape[0]:  28
box_num:  4
boxes.shape[0]:  6
box_num:  6
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  5
box_num:  3
boxes.shape[0]:  10
box_num:  2
boxes.shape[0]:  3
box_num:  3
boxes.shape[0]:  18
box_num:  14
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  14
box_num:  2
boxes.shape[0]:  10
box_num:  3
boxes.shape[0]:  3
box_num:  1
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  29
box_num:  6
boxes.shape[0]:  5
box_num:  0
boxes.shape[0]:  12
box_num:  1
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  4
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  15
box_num:  6
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  78
box_num:  16
boxes.shape[0]:  6
box_num:  6
boxes.shape[0]:  19
box_num:  10
boxes.shape[0]:  33
box_num:  6
boxes.shape[0]:  11
box_num:  5
boxes.shape[0]:  15
box_num:  11
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  12
box_num:  7
boxes.shape[0]:  8
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  4
box_num:  0
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  4
box_num:  3
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  6
box_num:  5
boxes.shape[0]:  3
box_num:  0
boxes.shape[0]:  7
box_num:  5
boxes.shape[0]:  2
box_num:  1
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  3
box_num:  2
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  6
box_num:  2
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  2
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  1
box_num:  0
boxes.shape[0]:  5
box_num:  5
boxes.shape[0]:  4
box_num:  1
boxes.shape[0]:  2
box_num:  0
